{"abi": [{"inputs": [{"internalType": "string[]", "name": "candidateNames", "type": "string[]"}], "stateMutability": "nonpayable", "type": "constructor", "name": "constructor"}, {"inputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "name": "candidates", "outputs": [{"internalType": "string", "name": "name", "type": "string"}, {"internalType": "uint256", "name": "voteCount", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "chairperson", "outputs": [{"internalType": "address", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "election_state", "outputs": [{"internalType": "enum Voting.ELECTION_STATE", "name": "", "type": "uint8"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "getWinnerName", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "uint256", "name": "candidate", "type": "uint256"}], "name": "vote", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "address", "name": "", "type": "address"}], "name": "voters", "outputs": [{"internalType": "bool", "name": "voted", "type": "bool"}, {"internalType": "uint256", "name": "vote", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "winnerName", "outputs": [{"internalType": "string", "name": "", "type": "string"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "winningCandidate", "outputs": [{"internalType": "uint256", "name": "winningCandidate_", "type": "uint256"}], "stateMutability": "view", "type": "function"}], "allSourcePaths": {"0": "contracts/Voting.sol"}, "ast": {"absolutePath": "contracts/Voting.sol", "exportedSymbols": {"Voting": [180]}, "id": 181, "license": "MIT", "nodeType": "SourceUnit", "nodes": [{"id": 1, "literals": ["solidity", ">=", "0.7", ".0", "<", "0.9", ".0"], "nodeType": "PragmaDirective", "src": "32:31:0"}, {"abstract": false, "baseContracts": [], "canonicalName": "Voting", "contractDependencies": [], "contractKind": "contract", "fullyImplemented": true, "id": 180, "linearizedBaseContracts": [180], "name": "Voting", "nameLocation": "73:6:0", "nodeType": "ContractDefinition", "nodes": [{"canonicalName": "Voting.Voter", "id": 6, "members": [{"constant": false, "id": 3, "mutability": "mutable", "name": "voted", "nameLocation": "157:5:0", "nodeType": "VariableDeclaration", "scope": 6, "src": "152:10:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 2, "name": "bool", "nodeType": "ElementaryTypeName", "src": "152:4:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}, {"constant": false, "id": 5, "mutability": "mutable", "name": "vote", "nameLocation": "216:4:0", "nodeType": "VariableDeclaration", "scope": 6, "src": "211:9:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 4, "name": "uint", "nodeType": "ElementaryTypeName", "src": "211:4:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "name": "Voter", "nameLocation": "136:5:0", "nodeType": "StructDefinition", "scope": 180, "src": "129:133:0", "visibility": "public"}, {"canonicalName": "Voting.ELECTION_STATE", "id": 9, "members": [{"id": 7, "name": "OPEN", "nameLocation": "299:4:0", "nodeType": "EnumValue", "src": "299:4:0"}, {"id": 8, "name": "CLOSED", "nameLocation": "304:6:0", "nodeType": "EnumValue", "src": "304:6:0"}], "name": "ELECTION_STATE", "nameLocation": "275:14:0", "nodeType": "EnumDefinition", "src": "270:46:0"}, {"constant": false, "functionSelector": "e2ba53f0", "id": 11, "mutability": "mutable", "name": "winnerName", "nameLocation": "335:10:0", "nodeType": "VariableDeclaration", "scope": 180, "src": "321:24:0", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_string_storage", "typeString": "string"}, "typeName": {"id": 10, "name": "string", "nodeType": "ElementaryTypeName", "src": "321:6:0", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "visibility": "public"}, {"constant": false, "functionSelector": "d5d58e08", "id": 14, "mutability": "mutable", "name": "election_state", "nameLocation": "373:14:0", "nodeType": "VariableDeclaration", "scope": 180, "src": "351:36:0", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_enum$_ELECTION_STATE_$9", "typeString": "enum Voting.ELECTION_STATE"}, "typeName": {"id": 13, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 12, "name": "ELECTION_STATE", "nodeType": "IdentifierPath", "referencedDeclaration": 9, "src": "351:14:0"}, "referencedDeclaration": 9, "src": "351:14:0", "typeDescriptions": {"typeIdentifier": "t_enum$_ELECTION_STATE_$9", "typeString": "enum Voting.ELECTION_STATE"}}, "visibility": "public"}, {"canonicalName": "Voting.Candidate", "id": 19, "members": [{"constant": false, "id": 16, "mutability": "mutable", "name": "name", "nameLocation": "473:4:0", "nodeType": "VariableDeclaration", "scope": 19, "src": "466:11:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}, "typeName": {"id": 15, "name": "string", "nodeType": "ElementaryTypeName", "src": "466:6:0", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "visibility": "internal"}, {"constant": false, "id": 18, "mutability": "mutable", "name": "voteCount", "nameLocation": "525:9:0", "nodeType": "VariableDeclaration", "scope": 19, "src": "520:14:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 17, "name": "uint", "nodeType": "ElementaryTypeName", "src": "520:4:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "name": "Candidate", "nameLocation": "446:9:0", "nodeType": "StructDefinition", "scope": 180, "src": "439:133:0", "visibility": "public"}, {"constant": false, "functionSelector": "2e4176cf", "id": 21, "mutability": "mutable", "name": "chairperson", "nameLocation": "593:11:0", "nodeType": "VariableDeclaration", "scope": 180, "src": "578:26:0", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 20, "name": "address", "nodeType": "ElementaryTypeName", "src": "578:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "public"}, {"constant": false, "functionSelector": "a3ec138d", "id": 26, "mutability": "mutable", "name": "voters", "nameLocation": "745:6:0", "nodeType": "VariableDeclaration", "scope": 180, "src": "712:39:0", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$6_storage_$", "typeString": "mapping(address => struct Voting.Voter)"}, "typeName": {"id": 25, "keyType": {"id": 22, "name": "address", "nodeType": "ElementaryTypeName", "src": "720:7:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "Mapping", "src": "712:25:0", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$6_storage_$", "typeString": "mapping(address => struct Voting.Voter)"}, "valueType": {"id": 24, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 23, "name": "Voter", "nodeType": "IdentifierPath", "referencedDeclaration": 6, "src": "731:5:0"}, "referencedDeclaration": 6, "src": "731:5:0", "typeDescriptions": {"typeIdentifier": "t_struct$_Voter_$6_storage_ptr", "typeString": "struct Voting.Voter"}}}, "visibility": "public"}, {"constant": false, "functionSelector": "3477ee2e", "id": 30, "mutability": "mutable", "name": "candidates", "nameLocation": "834:10:0", "nodeType": "VariableDeclaration", "scope": 180, "src": "815:29:0", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_Candidate_$19_storage_$dyn_storage", "typeString": "struct Voting.Candidate[]"}, "typeName": {"baseType": {"id": 28, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 27, "name": "Candidate", "nodeType": "IdentifierPath", "referencedDeclaration": 19, "src": "815:9:0"}, "referencedDeclaration": 19, "src": "815:9:0", "typeDescriptions": {"typeIdentifier": "t_struct$_Candidate_$19_storage_ptr", "typeString": "struct Voting.Candidate"}}, "id": 29, "nodeType": "ArrayTypeName", "src": "815:11:0", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_Candidate_$19_storage_$dyn_storage_ptr", "typeString": "struct Voting.Candidate[]"}}, "visibility": "public"}, {"body": {"id": 70, "nodeType": "Block", "src": "900:281:0", "statements": [{"expression": {"id": 39, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 36, "name": "chairperson", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21, "src": "910:11:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"expression": {"id": 37, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "924:3:0", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 38, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "924:10:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "910:24:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 40, "nodeType": "ExpressionStatement", "src": "910:24:0"}, {"expression": {"id": 44, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 41, "name": "election_state", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 14, "src": "944:14:0", "typeDescriptions": {"typeIdentifier": "t_enum$_ELECTION_STATE_$9", "typeString": "enum Voting.ELECTION_STATE"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"expression": {"id": 42, "name": "ELECTION_STATE", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9, "src": "959:14:0", "typeDescriptions": {"typeIdentifier": "t_type$_t_enum$_ELECTION_STATE_$9_$", "typeString": "type(enum Voting.ELECTION_STATE)"}}, "id": 43, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "OPEN", "nodeType": "MemberAccess", "referencedDeclaration": 7, "src": "959:19:0", "typeDescriptions": {"typeIdentifier": "t_enum$_ELECTION_STATE_$9", "typeString": "enum Voting.ELECTION_STATE"}}, "src": "944:34:0", "typeDescriptions": {"typeIdentifier": "t_enum$_ELECTION_STATE_$9", "typeString": "enum Voting.ELECTION_STATE"}}, "id": 45, "nodeType": "ExpressionStatement", "src": "944:34:0"}, {"body": {"id": 68, "nodeType": "Block", "src": "1037:138:0", "statements": [{"expression": {"arguments": [{"arguments": [{"baseExpression": {"id": 61, "name": "candidateNames", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 33, "src": "1101:14:0", "typeDescriptions": {"typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr", "typeString": "string memory[] memory"}}, "id": 63, "indexExpression": {"id": 62, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 47, "src": "1116:1:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "1101:17:0", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}, {"hexValue": "30", "id": 64, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "1147:1:0", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}, {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 60, "name": "Candidate", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 19, "src": "1067:9:0", "typeDescriptions": {"typeIdentifier": "t_type$_t_struct$_Candidate_$19_storage_ptr_$", "typeString": "type(struct Voting.Candidate storage pointer)"}}, "id": 65, "isConstant": false, "isLValue": false, "isPure": false, "kind": "structConstructorCall", "lValueRequested": false, "names": ["name", "voteCount"], "nodeType": "FunctionCall", "src": "1067:96:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_struct$_Candidate_$19_memory_ptr", "typeString": "struct Voting.Candidate memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_struct$_Candidate_$19_memory_ptr", "typeString": "struct Voting.Candidate memory"}], "expression": {"id": 57, "name": "candidates", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 30, "src": "1051:10:0", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_Candidate_$19_storage_$dyn_storage", "typeString": "struct Voting.Candidate storage ref[] storage ref"}}, "id": 59, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "push", "nodeType": "MemberAccess", "src": "1051:15:0", "typeDescriptions": {"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Candidate_$19_storage_$dyn_storage_ptr_$_t_struct$_Candidate_$19_storage_$returns$__$bound_to$_t_array$_t_struct$_Candidate_$19_storage_$dyn_storage_ptr_$", "typeString": "function (struct Voting.Candidate storage ref[] storage pointer,struct Voting.Candidate storage ref)"}}, "id": 66, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1051:113:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 67, "nodeType": "ExpressionStatement", "src": "1051:113:0"}]}, "condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 53, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 50, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 47, "src": "1005:1:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<", "rightExpression": {"expression": {"id": 51, "name": "candidateNames", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 33, "src": "1009:14:0", "typeDescriptions": {"typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr", "typeString": "string memory[] memory"}}, "id": 52, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "length", "nodeType": "MemberAccess", "src": "1009:21:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "1005:25:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 69, "initializationExpression": {"assignments": [47], "declarations": [{"constant": false, "id": 47, "mutability": "mutable", "name": "i", "nameLocation": "998:1:0", "nodeType": "VariableDeclaration", "scope": 69, "src": "993:6:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 46, "name": "uint", "nodeType": "ElementaryTypeName", "src": "993:4:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 49, "initialValue": {"hexValue": "30", "id": 48, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "1002:1:0", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "nodeType": "VariableDeclarationStatement", "src": "993:10:0"}, "loopExpression": {"expression": {"id": 55, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "++", "prefix": false, "src": "1032:3:0", "subExpression": {"id": 54, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 47, "src": "1032:1:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 56, "nodeType": "ExpressionStatement", "src": "1032:3:0"}, "nodeType": "ForStatement", "src": "988:187:0"}]}, "id": 71, "implemented": true, "kind": "constructor", "modifiers": [], "name": "", "nameLocation": "-1:-1:-1", "nodeType": "FunctionDefinition", "parameters": {"id": 34, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 33, "mutability": "mutable", "name": "candidateNames", "nameLocation": "884:14:0", "nodeType": "VariableDeclaration", "scope": 71, "src": "868:30:0", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr", "typeString": "string[]"}, "typeName": {"baseType": {"id": 31, "name": "string", "nodeType": "ElementaryTypeName", "src": "868:6:0", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "id": 32, "nodeType": "ArrayTypeName", "src": "868:8:0", "typeDescriptions": {"typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr", "typeString": "string[]"}}, "visibility": "internal"}], "src": "867:32:0"}, "returnParameters": {"id": 35, "nodeType": "ParameterList", "parameters": [], "src": "900:0:0"}, "scope": 180, "src": "856:325:0", "stateMutability": "nonpayable", "virtual": false, "visibility": "public"}, {"body": {"id": 119, "nodeType": "Block", "src": "1252:296:0", "statements": [{"assignments": [79], "declarations": [{"constant": false, "id": 79, "mutability": "mutable", "name": "sender", "nameLocation": "1276:6:0", "nodeType": "VariableDeclaration", "scope": 119, "src": "1262:20:0", "stateVariable": false, "storageLocation": "storage", "typeDescriptions": {"typeIdentifier": "t_struct$_Voter_$6_storage_ptr", "typeString": "struct Voting.Voter"}, "typeName": {"id": 78, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 77, "name": "Voter", "nodeType": "IdentifierPath", "referencedDeclaration": 6, "src": "1262:5:0"}, "referencedDeclaration": 6, "src": "1262:5:0", "typeDescriptions": {"typeIdentifier": "t_struct$_Voter_$6_storage_ptr", "typeString": "struct Voting.Voter"}}, "visibility": "internal"}], "id": 84, "initialValue": {"baseExpression": {"id": 80, "name": "voters", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 26, "src": "1285:6:0", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$6_storage_$", "typeString": "mapping(address => struct Voting.Voter storage ref)"}}, "id": 83, "indexExpression": {"expression": {"id": 81, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "1292:3:0", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 82, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "1292:10:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "1285:18:0", "typeDescriptions": {"typeIdentifier": "t_struct$_Voter_$6_storage", "typeString": "struct Voting.Voter storage ref"}}, "nodeType": "VariableDeclarationStatement", "src": "1262:41:0"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_enum$_ELECTION_STATE_$9", "typeString": "enum Voting.ELECTION_STATE"}, "id": 89, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 86, "name": "election_state", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 14, "src": "1321:14:0", "typeDescriptions": {"typeIdentifier": "t_enum$_ELECTION_STATE_$9", "typeString": "enum Voting.ELECTION_STATE"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"expression": {"id": 87, "name": "ELECTION_STATE", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9, "src": "1337:14:0", "typeDescriptions": {"typeIdentifier": "t_type$_t_enum$_ELECTION_STATE_$9_$", "typeString": "type(enum Voting.ELECTION_STATE)"}}, "id": 88, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "OPEN", "nodeType": "MemberAccess", "referencedDeclaration": 7, "src": "1337:19:0", "typeDescriptions": {"typeIdentifier": "t_enum$_ELECTION_STATE_$9", "typeString": "enum Voting.ELECTION_STATE"}}, "src": "1321:35:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "766f74696e6720636c6f7365642e", "id": 90, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "1358:16:0", "typeDescriptions": {"typeIdentifier": "t_stringliteral_76317e9be2f681a648ca4dd6f5bf2317f101fb57e6c080dd830ce2689a2fd316", "typeString": "literal_string \"voting closed.\""}, "value": "voting closed."}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_76317e9be2f681a648ca4dd6f5bf2317f101fb57e6c080dd830ce2689a2fd316", "typeString": "literal_string \"voting closed.\""}], "id": 85, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "1313:7:0", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 91, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1313:62:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 92, "nodeType": "ExpressionStatement", "src": "1313:62:0"}, {"expression": {"arguments": [{"id": 96, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "!", "prefix": true, "src": "1393:13:0", "subExpression": {"expression": {"id": 94, "name": "sender", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 79, "src": "1394:6:0", "typeDescriptions": {"typeIdentifier": "t_struct$_Voter_$6_storage_ptr", "typeString": "struct Voting.Voter storage pointer"}}, "id": 95, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "voted", "nodeType": "MemberAccess", "referencedDeclaration": 3, "src": "1394:12:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "416c726561647920766f7465642e", "id": 97, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "1408:16:0", "typeDescriptions": {"typeIdentifier": "t_stringliteral_56aab92b7164a4ea72a098d2d95a5e763b71d07f265e8d46fc7240404017fa84", "typeString": "literal_string \"Already voted.\""}, "value": "Already voted."}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_56aab92b7164a4ea72a098d2d95a5e763b71d07f265e8d46fc7240404017fa84", "typeString": "literal_string \"Already voted.\""}], "id": 93, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "1385:7:0", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 98, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1385:40:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 99, "nodeType": "ExpressionStatement", "src": "1385:40:0"}, {"expression": {"id": 104, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"id": 100, "name": "sender", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 79, "src": "1435:6:0", "typeDescriptions": {"typeIdentifier": "t_struct$_Voter_$6_storage_ptr", "typeString": "struct Voting.Voter storage pointer"}}, "id": 102, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "voted", "nodeType": "MemberAccess", "referencedDeclaration": 3, "src": "1435:12:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"hexValue": "74727565", "id": 103, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "1450:4:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "true"}, "src": "1435:19:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 105, "nodeType": "ExpressionStatement", "src": "1435:19:0"}, {"expression": {"id": 110, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"id": 106, "name": "sender", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 79, "src": "1464:6:0", "typeDescriptions": {"typeIdentifier": "t_struct$_Voter_$6_storage_ptr", "typeString": "struct Voting.Voter storage pointer"}}, "id": 108, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "vote", "nodeType": "MemberAccess", "referencedDeclaration": 5, "src": "1464:11:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 109, "name": "candidate", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 74, "src": "1478:9:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "1464:23:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 111, "nodeType": "ExpressionStatement", "src": "1464:23:0"}, {"expression": {"id": 117, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"baseExpression": {"id": 112, "name": "candidates", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 30, "src": "1505:10:0", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_Candidate_$19_storage_$dyn_storage", "typeString": "struct Voting.Candidate storage ref[] storage ref"}}, "id": 114, "indexExpression": {"id": 113, "name": "candidate", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 74, "src": "1516:9:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "1505:21:0", "typeDescriptions": {"typeIdentifier": "t_struct$_Candidate_$19_storage", "typeString": "struct Voting.Candidate storage ref"}}, "id": 115, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "voteCount", "nodeType": "MemberAccess", "referencedDeclaration": 18, "src": "1505:31:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "+=", "rightHandSide": {"hexValue": "31", "id": 116, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "1540:1:0", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "src": "1505:36:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 118, "nodeType": "ExpressionStatement", "src": "1505:36:0"}]}, "documentation": {"id": 72, "nodeType": "StructuredDocumentation", "src": "1192:18:0", "text": "Give your vote"}, "functionSelector": "0121b93f", "id": 120, "implemented": true, "kind": "function", "modifiers": [], "name": "vote", "nameLocation": "1224:4:0", "nodeType": "FunctionDefinition", "parameters": {"id": 75, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 74, "mutability": "mutable", "name": "candidate", "nameLocation": "1234:9:0", "nodeType": "VariableDeclaration", "scope": 120, "src": "1229:14:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 73, "name": "uint", "nodeType": "ElementaryTypeName", "src": "1229:4:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "1228:16:0"}, "returnParameters": {"id": 76, "nodeType": "ParameterList", "parameters": [], "src": "1252:0:0"}, "scope": 180, "src": "1215:333:0", "stateMutability": "nonpayable", "virtual": false, "visibility": "public"}, {"body": {"id": 161, "nodeType": "Block", "src": "1645:282:0", "statements": [{"assignments": [126], "declarations": [{"constant": false, "id": 126, "mutability": "mutable", "name": "winningVoteCount", "nameLocation": "1660:16:0", "nodeType": "VariableDeclaration", "scope": 161, "src": "1655:21:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 125, "name": "uint", "nodeType": "ElementaryTypeName", "src": "1655:4:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 128, "initialValue": {"hexValue": "30", "id": 127, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "1679:1:0", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "nodeType": "VariableDeclarationStatement", "src": "1655:25:0"}, {"body": {"id": 159, "nodeType": "Block", "src": "1735:186:0", "statements": [{"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 145, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"baseExpression": {"id": 140, "name": "candidates", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 30, "src": "1753:10:0", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_Candidate_$19_storage_$dyn_storage", "typeString": "struct Voting.Candidate storage ref[] storage ref"}}, "id": 142, "indexExpression": {"id": 141, "name": "p", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 130, "src": "1764:1:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "1753:13:0", "typeDescriptions": {"typeIdentifier": "t_struct$_Candidate_$19_storage", "typeString": "struct Voting.Candidate storage ref"}}, "id": 143, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "voteCount", "nodeType": "MemberAccess", "referencedDeclaration": 18, "src": "1753:23:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": {"id": 144, "name": "winningVoteCount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 126, "src": "1779:16:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "1753:42:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 158, "nodeType": "IfStatement", "src": "1749:162:0", "trueBody": {"id": 157, "nodeType": "Block", "src": "1797:114:0", "statements": [{"expression": {"id": 151, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 146, "name": "winningVoteCount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 126, "src": "1815:16:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"expression": {"baseExpression": {"id": 147, "name": "candidates", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 30, "src": "1834:10:0", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_Candidate_$19_storage_$dyn_storage", "typeString": "struct Voting.Candidate storage ref[] storage ref"}}, "id": 149, "indexExpression": {"id": 148, "name": "p", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 130, "src": "1845:1:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "1834:13:0", "typeDescriptions": {"typeIdentifier": "t_struct$_Candidate_$19_storage", "typeString": "struct Voting.Candidate storage ref"}}, "id": 150, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "voteCount", "nodeType": "MemberAccess", "referencedDeclaration": 18, "src": "1834:23:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "1815:42:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 152, "nodeType": "ExpressionStatement", "src": "1815:42:0"}, {"expression": {"id": 155, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 153, "name": "winningCandidate_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 123, "src": "1875:17:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 154, "name": "p", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 130, "src": "1895:1:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "1875:21:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 156, "nodeType": "ExpressionStatement", "src": "1875:21:0"}]}}]}, "condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 136, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 133, "name": "p", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 130, "src": "1707:1:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<", "rightExpression": {"expression": {"id": 134, "name": "candidates", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 30, "src": "1711:10:0", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_Candidate_$19_storage_$dyn_storage", "typeString": "struct Voting.Candidate storage ref[] storage ref"}}, "id": 135, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "length", "nodeType": "MemberAccess", "src": "1711:17:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "1707:21:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 160, "initializationExpression": {"assignments": [130], "declarations": [{"constant": false, "id": 130, "mutability": "mutable", "name": "p", "nameLocation": "1700:1:0", "nodeType": "VariableDeclaration", "scope": 160, "src": "1695:6:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 129, "name": "uint", "nodeType": "ElementaryTypeName", "src": "1695:4:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 132, "initialValue": {"hexValue": "30", "id": 131, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "1704:1:0", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "nodeType": "VariableDeclarationStatement", "src": "1695:10:0"}, "loopExpression": {"expression": {"id": 138, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "++", "prefix": false, "src": "1730:3:0", "subExpression": {"id": 137, "name": "p", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 130, "src": "1730:1:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 139, "nodeType": "ExpressionStatement", "src": "1730:3:0"}, "nodeType": "ForStatement", "src": "1690:231:0"}]}, "functionSelector": "d28178d7", "id": 162, "implemented": true, "kind": "function", "modifiers": [], "name": "winningCandidate", "nameLocation": "1565:16:0", "nodeType": "FunctionDefinition", "parameters": {"id": 121, "nodeType": "ParameterList", "parameters": [], "src": "1581:2:0"}, "returnParameters": {"id": 124, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 123, "mutability": "mutable", "name": "winningCandidate_", "nameLocation": "1622:17:0", "nodeType": "VariableDeclaration", "scope": 162, "src": "1617:22:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 122, "name": "uint", "nodeType": "ElementaryTypeName", "src": "1617:4:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "1616:24:0"}, "scope": 180, "src": "1556:371:0", "stateMutability": "view", "virtual": false, "visibility": "public"}, {"body": {"id": 178, "nodeType": "Block", "src": "1970:111:0", "statements": [{"expression": {"id": 168, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 165, "name": "election_state", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 14, "src": "1980:14:0", "typeDescriptions": {"typeIdentifier": "t_enum$_ELECTION_STATE_$9", "typeString": "enum Voting.ELECTION_STATE"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"expression": {"id": 166, "name": "ELECTION_STATE", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9, "src": "1995:14:0", "typeDescriptions": {"typeIdentifier": "t_type$_t_enum$_ELECTION_STATE_$9_$", "typeString": "type(enum Voting.ELECTION_STATE)"}}, "id": 167, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "CLOSED", "nodeType": "MemberAccess", "referencedDeclaration": 8, "src": "1995:21:0", "typeDescriptions": {"typeIdentifier": "t_enum$_ELECTION_STATE_$9", "typeString": "enum Voting.ELECTION_STATE"}}, "src": "1980:36:0", "typeDescriptions": {"typeIdentifier": "t_enum$_ELECTION_STATE_$9", "typeString": "enum Voting.ELECTION_STATE"}}, "id": 169, "nodeType": "ExpressionStatement", "src": "1980:36:0"}, {"expression": {"id": 176, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 170, "name": "winnerName", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 11, "src": "2026:10:0", "typeDescriptions": {"typeIdentifier": "t_string_storage", "typeString": "string storage ref"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"expression": {"baseExpression": {"id": 171, "name": "candidates", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 30, "src": "2039:10:0", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_Candidate_$19_storage_$dyn_storage", "typeString": "struct Voting.Candidate storage ref[] storage ref"}}, "id": 174, "indexExpression": {"arguments": [], "expression": {"argumentTypes": [], "id": 172, "name": "winningCandidate", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 162, "src": "2050:16:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$", "typeString": "function () view returns (uint256)"}}, "id": 173, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2050:18:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "2039:30:0", "typeDescriptions": {"typeIdentifier": "t_struct$_Candidate_$19_storage", "typeString": "struct Voting.Candidate storage ref"}}, "id": 175, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "name", "nodeType": "MemberAccess", "referencedDeclaration": 16, "src": "2039:35:0", "typeDescriptions": {"typeIdentifier": "t_string_storage", "typeString": "string storage ref"}}, "src": "2026:48:0", "typeDescriptions": {"typeIdentifier": "t_string_storage", "typeString": "string storage ref"}}, "id": 177, "nodeType": "ExpressionStatement", "src": "2026:48:0"}]}, "functionSelector": "2bfda515", "id": 179, "implemented": true, "kind": "function", "modifiers": [], "name": "getWinnerName", "nameLocation": "1942:13:0", "nodeType": "FunctionDefinition", "parameters": {"id": 163, "nodeType": "ParameterList", "parameters": [], "src": "1955:2:0"}, "returnParameters": {"id": 164, "nodeType": "ParameterList", "parameters": [], "src": "1970:0:0"}, "scope": 180, "src": "1933:148:0", "stateMutability": "nonpayable", "virtual": false, "visibility": "public"}], "scope": 181, "src": "64:2019:0", "usedErrors": []}], "src": "32:2051:0"}, "bytecode": "60806040523480156200001157600080fd5b5060405162000ac538038062000ac58339810160408190526200003491620001d8565b600180546001600160a81b031916336101000260ff191617905560005b8151811015620000e157600360405180604001604052808484815181106200007d576200007d62000324565b6020908102919091018101518252600091810182905283546001810185559382529081902082518051939460020290910192620000be9284920190620000e9565b506020820151816001015550508080620000d8906200033a565b91505062000051565b5050620003a1565b828054620000f79062000364565b90600052602060002090601f0160209004810192826200011b576000855562000166565b82601f106200013657805160ff191683800117855562000166565b8280016001018555821562000166579182015b828111156200016657825182559160200191906001019062000149565b506200017492915062000178565b5090565b5b8082111562000174576000815560010162000179565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b0381118282101715620001d057620001d06200018f565b604052919050565b60006020808385031215620001ec57600080fd5b82516001600160401b03808211156200020457600080fd5b8185019150601f86818401126200021a57600080fd5b8251828111156200022f576200022f6200018f565b8060051b62000240868201620001a5565b918252848101860191868101908a8411156200025b57600080fd5b87870192505b8383101562000316578251868111156200027b5760008081fd5b8701603f81018c136200028e5760008081fd5b8881015187811115620002a557620002a56200018f565b620002b8818801601f19168b01620001a5565b81815260408e81848601011115620002d05760008081fd5b60005b83811015620002f0578481018201518382018e01528c01620002d3565b83811115620003025760008d85850101525b505084525050918701919087019062000261565b9a9950505050505050505050565b634e487b7160e01b600052603260045260246000fd5b60006000198214156200035d57634e487b7160e01b600052601160045260246000fd5b5060010190565b600181811c908216806200037957607f821691505b602082108114156200039b57634e487b7160e01b600052602260045260246000fd5b50919050565b61071480620003b16000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063a3ec138d1161005b578063a3ec138d14610100578063d28178d714610144578063d5d58e081461015a578063e2ba53f01461017457600080fd5b80630121b93f1461008d5780632bfda515146100a25780632e4176cf146100aa5780633477ee2e146100df575b600080fd5b6100a061009b36600461053b565b610189565b005b6100a0610286565b6001546100c29061010090046001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6100f26100ed36600461053b565b6102d4565b6040516100d69291906105a1565b61012d61010e3660046105c3565b6002602052600090815260409020805460019091015460ff9091169082565b6040805192151583526020830191909152016100d6565b61014c610390565b6040519081526020016100d6565b6001546101679060ff1681565b6040516100d69190610609565b61017c61040d565b6040516100d69190610631565b336000908152600260205260408120906001805460ff16908111156101b0576101b06105f3565b146101f35760405162461bcd60e51b815260206004820152600e60248201526d3b37ba34b7339031b637b9b2b21760911b60448201526064015b60405180910390fd5b805460ff16156102365760405162461bcd60e51b815260206004820152600e60248201526d20b63932b0b23c903b37ba32b21760911b60448201526064016101ea565b805460ff191660019081178255818101839055600380548490811061025d5761025d610644565b9060005260206000209060020201600101600082825461027d9190610670565b90915550505050565b6001805460ff191681179055600361029c610390565b815481106102ac576102ac610644565b60009182526020822060029091020180546102c690610688565b6102d192919061049b565b50565b600381815481106102e457600080fd5b906000526020600020906002020160009150905080600001805461030790610688565b80601f016020809104026020016040519081016040528092919081815260200182805461033390610688565b80156103805780601f1061035557610100808354040283529160200191610380565b820191906000526020600020905b81548152906001019060200180831161036357829003601f168201915b5050505050908060010154905082565b600080805b6003548110156104085781600382815481106103b3576103b3610644565b90600052602060002090600202016001015411156103f657600381815481106103de576103de610644565b90600052602060002090600202016001015491508092505b80610400816106c3565b915050610395565b505090565b6000805461041a90610688565b80601f016020809104026020016040519081016040528092919081815260200182805461044690610688565b80156104935780601f1061046857610100808354040283529160200191610493565b820191906000526020600020905b81548152906001019060200180831161047657829003601f168201915b505050505081565b8280546104a790610688565b90600052602060002090601f0160209004810192826104c95760008555610516565b82601f106104da5780548555610516565b8280016001018555821561051657600052602060002091601f016020900482015b828111156105165782548255916001019190600101906104fb565b50610522929150610526565b5090565b5b808211156105225760008155600101610527565b60006020828403121561054d57600080fd5b5035919050565b6000815180845260005b8181101561057a5760208185018101518683018201520161055e565b8181111561058c576000602083870101525b50601f01601f19169290920160200192915050565b6040815260006105b46040830185610554565b90508260208301529392505050565b6000602082840312156105d557600080fd5b81356001600160a01b03811681146105ec57600080fd5b9392505050565b634e487b7160e01b600052602160045260246000fd5b602081016002831061062b57634e487b7160e01b600052602160045260246000fd5b91905290565b6020815260006105ec6020830184610554565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600082198211156106835761068361065a565b500190565b600181811c9082168061069c57607f821691505b602082108114156106bd57634e487b7160e01b600052602260045260246000fd5b50919050565b60006000198214156106d7576106d761065a565b506001019056fea2646970667358221220c2d268b7acf475ed6c38193239d0ebca5a97cdede10d4b03ae0263967be4fb1264736f6c63430008090033", "bytecodeSha1": "c491c495f000e9afc27a83d2e4b45b936223abeb", "compiler": {"evm_version": "istanbul", "optimizer": {"enabled": true, "runs": 200}, "version": "0.8.9+commit.e5eed63a"}, "contractName": "Voting", "coverageMap": {"branches": {"0": {"Voting.vote": {"10": [1321, 1356, true], "11": [1393, 1406, true]}, "Voting.winningCandidate": {"12": [1753, 1795, false]}}}, "statements": {"0": {"Voting.getWinnerName": {"5": [1980, 2016], "6": [2026, 2074]}, "Voting.vote": {"0": [1313, 1375], "1": [1385, 1425], "2": [1435, 1454], "3": [1464, 1487], "4": [1505, 1541]}, "Voting.winningCandidate": {"7": [1815, 1857], "8": [1875, 1896], "9": [1730, 1733]}}}}, "dependencies": [], "deployedBytecode": "608060405234801561001057600080fd5b50600436106100885760003560e01c8063a3ec138d1161005b578063a3ec138d14610100578063d28178d714610144578063d5d58e081461015a578063e2ba53f01461017457600080fd5b80630121b93f1461008d5780632bfda515146100a25780632e4176cf146100aa5780633477ee2e146100df575b600080fd5b6100a061009b36600461053b565b610189565b005b6100a0610286565b6001546100c29061010090046001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6100f26100ed36600461053b565b6102d4565b6040516100d69291906105a1565b61012d61010e3660046105c3565b6002602052600090815260409020805460019091015460ff9091169082565b6040805192151583526020830191909152016100d6565b61014c610390565b6040519081526020016100d6565b6001546101679060ff1681565b6040516100d69190610609565b61017c61040d565b6040516100d69190610631565b336000908152600260205260408120906001805460ff16908111156101b0576101b06105f3565b146101f35760405162461bcd60e51b815260206004820152600e60248201526d3b37ba34b7339031b637b9b2b21760911b60448201526064015b60405180910390fd5b805460ff16156102365760405162461bcd60e51b815260206004820152600e60248201526d20b63932b0b23c903b37ba32b21760911b60448201526064016101ea565b805460ff191660019081178255818101839055600380548490811061025d5761025d610644565b9060005260206000209060020201600101600082825461027d9190610670565b90915550505050565b6001805460ff191681179055600361029c610390565b815481106102ac576102ac610644565b60009182526020822060029091020180546102c690610688565b6102d192919061049b565b50565b600381815481106102e457600080fd5b906000526020600020906002020160009150905080600001805461030790610688565b80601f016020809104026020016040519081016040528092919081815260200182805461033390610688565b80156103805780601f1061035557610100808354040283529160200191610380565b820191906000526020600020905b81548152906001019060200180831161036357829003601f168201915b5050505050908060010154905082565b600080805b6003548110156104085781600382815481106103b3576103b3610644565b90600052602060002090600202016001015411156103f657600381815481106103de576103de610644565b90600052602060002090600202016001015491508092505b80610400816106c3565b915050610395565b505090565b6000805461041a90610688565b80601f016020809104026020016040519081016040528092919081815260200182805461044690610688565b80156104935780601f1061046857610100808354040283529160200191610493565b820191906000526020600020905b81548152906001019060200180831161047657829003601f168201915b505050505081565b8280546104a790610688565b90600052602060002090601f0160209004810192826104c95760008555610516565b82601f106104da5780548555610516565b8280016001018555821561051657600052602060002091601f016020900482015b828111156105165782548255916001019190600101906104fb565b50610522929150610526565b5090565b5b808211156105225760008155600101610527565b60006020828403121561054d57600080fd5b5035919050565b6000815180845260005b8181101561057a5760208185018101518683018201520161055e565b8181111561058c576000602083870101525b50601f01601f19169290920160200192915050565b6040815260006105b46040830185610554565b90508260208301529392505050565b6000602082840312156105d557600080fd5b81356001600160a01b03811681146105ec57600080fd5b9392505050565b634e487b7160e01b600052602160045260246000fd5b602081016002831061062b57634e487b7160e01b600052602160045260246000fd5b91905290565b6020815260006105ec6020830184610554565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600082198211156106835761068361065a565b500190565b600181811c9082168061069c57607f821691505b602082108114156106bd57634e487b7160e01b600052602260045260246000fd5b50919050565b60006000198214156106d7576106d761065a565b506001019056fea2646970667358221220c2d268b7acf475ed6c38193239d0ebca5a97cdede10d4b03ae0263967be4fb1264736f6c63430008090033", "deployedSourceMap": "64:2019:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1215:333;;;;;;:::i;:::-;;:::i;:::-;;1933:148;;;:::i;578:26::-;;;;;;;;-1:-1:-1;;;;;578:26:0;;;;;;-1:-1:-1;;;;;363:32:1;;;345:51;;333:2;318:18;578:26:0;;;;;;;;815:29;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;712:39::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1664:14:1;;1657:22;1639:41;;1711:2;1696:18;;1689:34;;;;1612:18;712:39:0;1471:258:1;1556:371:0;;;:::i;:::-;;;1880:25:1;;;1868:2;1853:18;1556:371:0;1734:177:1;351:36:0;;;;;;;;;;;;;;;;:::i;321:24::-;;;:::i;:::-;;;;;;;:::i;1215:333::-;1292:10;1262:20;1285:18;;;:6;:18;;;;;;1321:14;;;;;;:35;;;;;;;:::i;:::-;;1313:62;;;;-1:-1:-1;;;1313:62:0;;2824:2:1;1313:62:0;;;2806:21:1;2863:2;2843:18;;;2836:30;-1:-1:-1;;;2882:18:1;;;2875:44;2936:18;;1313:62:0;;;;;;;;;1394:12;;;;1393:13;1385:40;;;;-1:-1:-1;;;1385:40:0;;3167:2:1;1385:40:0;;;3149:21:1;3206:2;3186:18;;;3179:30;-1:-1:-1;;;3225:18:1;;;3218:44;3279:18;;1385:40:0;2965:338:1;1385:40:0;1435:19;;-1:-1:-1;;1435:19:0;1450:4;1435:19;;;;;1464:11;;;:23;;;1505:10;:21;;1478:9;;1505:21;;;;;;:::i;:::-;;;;;;;;;;;:31;;;:36;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;1215:333:0:o;1933:148::-;1995:21;1980:36;;-1:-1:-1;;1980:36:0;;;;;2039:10;2050:18;:16;:18::i;:::-;2039:30;;;;;;;;:::i;:::-;;;;;;;;;;;;;2026:48;;;;;:::i;:::-;;;;;;:::i;:::-;;1933:148::o;815:29::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1556:371::-;1617:22;;;1690:231;1711:10;:17;1707:21;;1690:231;;;1779:16;1753:10;1764:1;1753:13;;;;;;;;:::i;:::-;;;;;;;;;;;:23;;;:42;1749:162;;;1834:10;1845:1;1834:13;;;;;;;;:::i;:::-;;;;;;;;;;;:23;;;1815:42;;1895:1;1875:21;;1749:162;1730:3;;;;:::i;:::-;;;;1690:231;;;;1645:282;1556:371;:::o;321:24::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:180:1;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:1;;14:180;-1:-1:-1;14:180:1:o;407:472::-;449:3;487:5;481:12;514:6;509:3;502:19;539:1;549:162;563:6;560:1;557:13;549:162;;;625:4;681:13;;;677:22;;671:29;653:11;;;649:20;;642:59;578:12;549:162;;;729:6;726:1;723:13;720:87;;;795:1;788:4;779:6;774:3;770:16;766:27;759:38;720:87;-1:-1:-1;861:2:1;840:15;-1:-1:-1;;836:29:1;827:39;;;;868:4;823:50;;407:472;-1:-1:-1;;407:472:1:o;884:291::-;1061:2;1050:9;1043:21;1024:4;1081:45;1122:2;1111:9;1107:18;1099:6;1081:45;:::i;:::-;1073:53;;1162:6;1157:2;1146:9;1142:18;1135:34;884:291;;;;;:::o;1180:286::-;1239:6;1292:2;1280:9;1271:7;1267:23;1263:32;1260:52;;;1308:1;1305;1298:12;1260:52;1334:23;;-1:-1:-1;;;;;1386:31:1;;1376:42;;1366:70;;1432:1;1429;1422:12;1366:70;1455:5;1180:286;-1:-1:-1;;;1180:286:1:o;1916:127::-;1977:10;1972:3;1968:20;1965:1;1958:31;2008:4;2005:1;1998:15;2032:4;2029:1;2022:15;2048:344;2196:2;2181:18;;2229:1;2218:13;;2208:144;;2274:10;2269:3;2265:20;2262:1;2255:31;2309:4;2306:1;2299:15;2337:4;2334:1;2327:15;2208:144;2361:25;;;2048:344;:::o;2397:220::-;2546:2;2535:9;2528:21;2509:4;2566:45;2607:2;2596:9;2592:18;2584:6;2566:45;:::i;3308:127::-;3369:10;3364:3;3360:20;3357:1;3350:31;3400:4;3397:1;3390:15;3424:4;3421:1;3414:15;3440:127;3501:10;3496:3;3492:20;3489:1;3482:31;3532:4;3529:1;3522:15;3556:4;3553:1;3546:15;3572:128;3612:3;3643:1;3639:6;3636:1;3633:13;3630:39;;;3649:18;;:::i;:::-;-1:-1:-1;3685:9:1;;3572:128::o;3705:380::-;3784:1;3780:12;;;;3827;;;3848:61;;3902:4;3894:6;3890:17;3880:27;;3848:61;3955:2;3947:6;3944:14;3924:18;3921:38;3918:161;;;4001:10;3996:3;3992:20;3989:1;3982:31;4036:4;4033:1;4026:15;4064:4;4061:1;4054:15;3918:161;;3705:380;;;:::o;4090:135::-;4129:3;-1:-1:-1;;4150:17:1;;4147:43;;;4170:18;;:::i;:::-;-1:-1:-1;4217:1:1;4206:13;;4090:135::o", "language": "Solidity", "natspec": {"kind": "dev", "methods": {"vote(uint256)": {"notice": "Give your vote"}}, "version": 1}, "offset": [64, 2083], "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x88 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA3EC138D GT PUSH2 0x5B JUMPI DUP1 PUSH4 0xA3EC138D EQ PUSH2 0x100 JUMPI DUP1 PUSH4 0xD28178D7 EQ PUSH2 0x144 JUMPI DUP1 PUSH4 0xD5D58E08 EQ PUSH2 0x15A JUMPI DUP1 PUSH4 0xE2BA53F0 EQ PUSH2 0x174 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x121B93F EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0x2BFDA515 EQ PUSH2 0xA2 JUMPI DUP1 PUSH4 0x2E4176CF EQ PUSH2 0xAA JUMPI DUP1 PUSH4 0x3477EE2E EQ PUSH2 0xDF JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA0 PUSH2 0x9B CALLDATASIZE PUSH1 0x4 PUSH2 0x53B JUMP JUMPDEST PUSH2 0x189 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xA0 PUSH2 0x286 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0xC2 SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF2 PUSH2 0xED CALLDATASIZE PUSH1 0x4 PUSH2 0x53B JUMP JUMPDEST PUSH2 0x2D4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD6 SWAP3 SWAP2 SWAP1 PUSH2 0x5A1 JUMP JUMPDEST PUSH2 0x12D PUSH2 0x10E CALLDATASIZE PUSH1 0x4 PUSH2 0x5C3 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD PUSH1 0xFF SWAP1 SWAP2 AND SWAP1 DUP3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 ISZERO ISZERO DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0xD6 JUMP JUMPDEST PUSH2 0x14C PUSH2 0x390 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xD6 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x167 SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD6 SWAP2 SWAP1 PUSH2 0x609 JUMP JUMPDEST PUSH2 0x17C PUSH2 0x40D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD6 SWAP2 SWAP1 PUSH2 0x631 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH1 0x1 DUP1 SLOAD PUSH1 0xFF AND SWAP1 DUP2 GT ISZERO PUSH2 0x1B0 JUMPI PUSH2 0x1B0 PUSH2 0x5F3 JUMP JUMPDEST EQ PUSH2 0x1F3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x3B37BA34B7339031B637B9B2B217 PUSH1 0x91 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x236 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x20B63932B0B23C903B37BA32B217 PUSH1 0x91 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1EA JUMP JUMPDEST DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR DUP3 SSTORE DUP2 DUP2 ADD DUP4 SWAP1 SSTORE PUSH1 0x3 DUP1 SLOAD DUP5 SWAP1 DUP2 LT PUSH2 0x25D JUMPI PUSH2 0x25D PUSH2 0x644 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x27D SWAP2 SWAP1 PUSH2 0x670 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0xFF NOT AND DUP2 OR SWAP1 SSTORE PUSH1 0x3 PUSH2 0x29C PUSH2 0x390 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x2AC JUMPI PUSH2 0x2AC PUSH2 0x644 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 PUSH1 0x2 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH2 0x2C6 SWAP1 PUSH2 0x688 JUMP JUMPDEST PUSH2 0x2D1 SWAP3 SWAP2 SWAP1 PUSH2 0x49B JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x3 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x2E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD DUP1 SLOAD PUSH2 0x307 SWAP1 PUSH2 0x688 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x333 SWAP1 PUSH2 0x688 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x380 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x355 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x380 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x363 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 JUMPDEST PUSH1 0x3 SLOAD DUP2 LT ISZERO PUSH2 0x408 JUMPI DUP2 PUSH1 0x3 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x3B3 JUMPI PUSH2 0x3B3 PUSH2 0x644 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD GT ISZERO PUSH2 0x3F6 JUMPI PUSH1 0x3 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x3DE JUMPI PUSH2 0x3DE PUSH2 0x644 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD SWAP2 POP DUP1 SWAP3 POP JUMPDEST DUP1 PUSH2 0x400 DUP2 PUSH2 0x6C3 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x395 JUMP JUMPDEST POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH2 0x41A SWAP1 PUSH2 0x688 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x446 SWAP1 PUSH2 0x688 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x493 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x468 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x493 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x476 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x4A7 SWAP1 PUSH2 0x688 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x4C9 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x516 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x4DA JUMPI DUP1 SLOAD DUP6 SSTORE PUSH2 0x516 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x516 JUMPI PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x516 JUMPI DUP3 SLOAD DUP3 SSTORE SWAP2 PUSH1 0x1 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x4FB JUMP JUMPDEST POP PUSH2 0x522 SWAP3 SWAP2 POP PUSH2 0x526 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x522 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x527 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x54D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x57A JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x55E JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x58C JUMPI PUSH1 0x0 PUSH1 0x20 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x5B4 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x554 JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0x20 DUP4 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x5EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 DUP2 ADD PUSH1 0x2 DUP4 LT PUSH2 0x62B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x5EC PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x554 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x683 JUMPI PUSH2 0x683 PUSH2 0x65A JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x69C JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x6BD JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x6D7 JUMPI PUSH2 0x6D7 PUSH2 0x65A JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC2 0xD2 PUSH9 0xB7ACF475ED6C381932 CODECOPY 0xD0 0xEB 0xCA GAS SWAP8 0xCD 0xED 0xE1 0xD 0x4B SUB 0xAE MUL PUSH4 0x967BE4FB SLT PUSH5 0x736F6C6343 STOP ADDMOD MULMOD STOP CALLER ", "pcMap": {"0": {"offset": [64, 2083], "op": "PUSH1", "path": "0", "value": "0x80"}, "2": {"fn": null, "offset": [64, 2083], "op": "PUSH1", "path": "0", "value": "0x40"}, "4": {"fn": null, "offset": [64, 2083], "op": "MSTORE", "path": "0"}, "5": {"fn": null, "offset": [64, 2083], "op": "CALLVALUE", "path": "0"}, "6": {"fn": null, "offset": [64, 2083], "op": "DUP1", "path": "0"}, "7": {"fn": null, "offset": [64, 2083], "op": "ISZERO", "path": "0"}, "8": {"fn": null, "offset": [64, 2083], "op": "PUSH2", "path": "0", "value": "0x10"}, "11": {"fn": null, "offset": [64, 2083], "op": "JUMPI", "path": "0"}, "12": {"fn": null, "offset": [64, 2083], "op": "PUSH1", "path": "0", "value": "0x0"}, "14": {"fn": null, "offset": [64, 2083], "op": "DUP1", "path": "0"}, "15": {"dev": "Cannot send ether to nonpayable function", "fn": null, "offset": [64, 2083], "op": "REVERT", "path": "0"}, "16": {"fn": null, "offset": [64, 2083], "op": "JUMPDEST", "path": "0"}, "17": {"fn": null, "offset": [64, 2083], "op": "POP", "path": "0"}, "18": {"fn": null, "offset": [64, 2083], "op": "PUSH1", "path": "0", "value": "0x4"}, "20": {"fn": null, "offset": [64, 2083], "op": "CALLDATASIZE", "path": "0"}, "21": {"fn": null, "offset": [64, 2083], "op": "LT", "path": "0"}, "22": {"fn": null, "offset": [64, 2083], "op": "PUSH2", "path": "0", "value": "0x88"}, "25": {"fn": null, "offset": [64, 2083], "op": "JUMPI", "path": "0"}, "26": {"fn": null, "offset": [64, 2083], "op": "PUSH1", "path": "0", "value": "0x0"}, "28": {"fn": null, "offset": [64, 2083], "op": "CALLDATALOAD", "path": "0"}, "29": {"fn": null, "offset": [64, 2083], "op": "PUSH1", "path": "0", "value": "0xE0"}, "31": {"fn": null, "offset": [64, 2083], "op": "SHR", "path": "0"}, "32": {"fn": null, "offset": [64, 2083], "op": "DUP1", "path": "0"}, "33": {"fn": null, "offset": [64, 2083], "op": "PUSH4", "path": "0", "value": "0xA3EC138D"}, "38": {"fn": null, "offset": [64, 2083], "op": "GT", "path": "0"}, "39": {"fn": null, "offset": [64, 2083], "op": "PUSH2", "path": "0", "value": "0x5B"}, "42": {"fn": null, "offset": [64, 2083], "op": "JUMPI", "path": "0"}, "43": {"fn": null, "offset": [64, 2083], "op": "DUP1", "path": "0"}, "44": {"fn": null, "offset": [64, 2083], "op": "PUSH4", "path": "0", "value": "0xA3EC138D"}, "49": {"fn": null, "offset": [64, 2083], "op": "EQ", "path": "0"}, "50": {"fn": null, "offset": [64, 2083], "op": "PUSH2", "path": "0", "value": "0x100"}, "53": {"fn": null, "offset": [64, 2083], "op": "JUMPI", "path": "0"}, "54": {"fn": null, "offset": [64, 2083], "op": "DUP1", "path": "0"}, "55": {"fn": null, "offset": [64, 2083], "op": "PUSH4", "path": "0", "value": "0xD28178D7"}, "60": {"fn": null, "offset": [64, 2083], "op": "EQ", "path": "0"}, "61": {"fn": null, "offset": [64, 2083], "op": "PUSH2", "path": "0", "value": "0x144"}, "64": {"fn": null, "offset": [64, 2083], "op": "JUMPI", "path": "0"}, "65": {"fn": null, "offset": [64, 2083], "op": "DUP1", "path": "0"}, "66": {"fn": null, "offset": [64, 2083], "op": "PUSH4", "path": "0", "value": "0xD5D58E08"}, "71": {"fn": null, "offset": [64, 2083], "op": "EQ", "path": "0"}, "72": {"fn": null, "offset": [64, 2083], "op": "PUSH2", "path": "0", "value": "0x15A"}, "75": {"fn": null, "offset": [64, 2083], "op": "JUMPI", "path": "0"}, "76": {"fn": null, "offset": [64, 2083], "op": "DUP1", "path": "0"}, "77": {"fn": null, "offset": [64, 2083], "op": "PUSH4", "path": "0", "value": "0xE2BA53F0"}, "82": {"fn": null, "offset": [64, 2083], "op": "EQ", "path": "0"}, "83": {"fn": null, "offset": [64, 2083], "op": "PUSH2", "path": "0", "value": "0x174"}, "86": {"fn": null, "offset": [64, 2083], "op": "JUMPI", "path": "0"}, "87": {"fn": null, "offset": [64, 2083], "op": "PUSH1", "path": "0", "value": "0x0"}, "89": {"fn": null, "offset": [64, 2083], "op": "DUP1", "path": "0"}, "90": {"fn": null, "offset": [64, 2083], "op": "REVERT", "path": "0"}, "91": {"fn": null, "offset": [64, 2083], "op": "JUMPDEST", "path": "0"}, "92": {"fn": null, "offset": [64, 2083], "op": "DUP1", "path": "0"}, "93": {"fn": null, "offset": [64, 2083], "op": "PUSH4", "path": "0", "value": "0x121B93F"}, "98": {"fn": null, "offset": [64, 2083], "op": "EQ", "path": "0"}, "99": {"fn": null, "offset": [64, 2083], "op": "PUSH2", "path": "0", "value": "0x8D"}, "102": {"fn": null, "offset": [64, 2083], "op": "JUMPI", "path": "0"}, "103": {"fn": null, "offset": [64, 2083], "op": "DUP1", "path": "0"}, "104": {"fn": null, "offset": [64, 2083], "op": "PUSH4", "path": "0", "value": "0x2BFDA515"}, "109": {"fn": null, "offset": [64, 2083], "op": "EQ", "path": "0"}, "110": {"fn": null, "offset": [64, 2083], "op": "PUSH2", "path": "0", "value": "0xA2"}, "113": {"fn": null, "offset": [64, 2083], "op": "JUMPI", "path": "0"}, "114": {"fn": null, "offset": [64, 2083], "op": "DUP1", "path": "0"}, "115": {"fn": null, "offset": [64, 2083], "op": "PUSH4", "path": "0", "value": "0x2E4176CF"}, "120": {"fn": null, "offset": [64, 2083], "op": "EQ", "path": "0"}, "121": {"fn": null, "offset": [64, 2083], "op": "PUSH2", "path": "0", "value": "0xAA"}, "124": {"fn": null, "offset": [64, 2083], "op": "JUMPI", "path": "0"}, "125": {"fn": null, "offset": [64, 2083], "op": "DUP1", "path": "0"}, "126": {"fn": null, "offset": [64, 2083], "op": "PUSH4", "path": "0", "value": "0x3477EE2E"}, "131": {"fn": null, "offset": [64, 2083], "op": "EQ", "path": "0"}, "132": {"fn": null, "offset": [64, 2083], "op": "PUSH2", "path": "0", "value": "0xDF"}, "135": {"fn": null, "offset": [64, 2083], "op": "JUMPI", "path": "0"}, "136": {"fn": null, "offset": [64, 2083], "op": "JUMPDEST", "path": "0"}, "137": {"fn": null, "offset": [64, 2083], "op": "PUSH1", "path": "0", "value": "0x0"}, "139": {"fn": null, "offset": [64, 2083], "op": "DUP1", "path": "0"}, "140": {"first_revert": true, "fn": null, "offset": [64, 2083], "op": "REVERT", "path": "0"}, "141": {"fn": "Voting.vote", "offset": [1215, 1548], "op": "JUMPDEST", "path": "0"}, "142": {"fn": "Voting.vote", "offset": [1215, 1548], "op": "PUSH2", "path": "0", "value": "0xA0"}, "145": {"fn": "Voting.vote", "offset": [1215, 1548], "op": "PUSH2", "path": "0", "value": "0x9B"}, "148": {"fn": "Voting.vote", "offset": [1215, 1548], "op": "CALLDATASIZE", "path": "0"}, "149": {"fn": "Voting.vote", "offset": [1215, 1548], "op": "PUSH1", "path": "0", "value": "0x4"}, "151": {"fn": "Voting.vote", "offset": [1215, 1548], "op": "PUSH2", "path": "0", "value": "0x53B"}, "154": {"fn": "Voting.vote", "jump": "i", "offset": [1215, 1548], "op": "JUMP", "path": "0"}, "155": {"fn": "Voting.vote", "offset": [1215, 1548], "op": "JUMPDEST", "path": "0"}, "156": {"fn": "Voting.vote", "offset": [1215, 1548], "op": "PUSH2", "path": "0", "value": "0x189"}, "159": {"fn": "Voting.vote", "jump": "i", "offset": [1215, 1548], "op": "JUMP", "path": "0"}, "160": {"fn": "Voting.vote", "offset": [1215, 1548], "op": "JUMPDEST", "path": "0"}, "161": {"fn": "Voting.vote", "offset": [1215, 1548], "op": "STOP", "path": "0"}, "162": {"fn": "Voting.getWinnerName", "offset": [1933, 2081], "op": "JUMPDEST", "path": "0"}, "163": {"fn": "Voting.getWinnerName", "offset": [1933, 2081], "op": "PUSH2", "path": "0", "value": "0xA0"}, "166": {"fn": "Voting.getWinnerName", "offset": [1933, 2081], "op": "PUSH2", "path": "0", "value": "0x286"}, "169": {"fn": "Voting.getWinnerName", "jump": "i", "offset": [1933, 2081], "op": "JUMP", "path": "0"}, "170": {"offset": [578, 604], "op": "JUMPDEST", "path": "0"}, "171": {"fn": "Voting.getWinnerName", "offset": [578, 604], "op": "PUSH1", "path": "0", "value": "0x1"}, "173": {"fn": "Voting.getWinnerName", "offset": [578, 604], "op": "SLOAD", "path": "0"}, "174": {"fn": "Voting.getWinnerName", "offset": [578, 604], "op": "PUSH2", "path": "0", "value": "0xC2"}, "177": {"fn": "Voting.getWinnerName", "offset": [578, 604], "op": "SWAP1", "path": "0"}, "178": {"fn": "Voting.getWinnerName", "offset": [578, 604], "op": "PUSH2", "path": "0", "value": "0x100"}, "181": {"fn": "Voting.getWinnerName", "offset": [578, 604], "op": "SWAP1", "path": "0"}, "182": {"fn": "Voting.getWinnerName", "offset": [578, 604], "op": "DIV", "path": "0"}, "183": {"op": "PUSH1", "value": "0x1"}, "185": {"op": "PUSH1", "value": "0x1"}, "187": {"op": "PUSH1", "value": "0xA0"}, "189": {"op": "SHL"}, "190": {"op": "SUB"}, "191": {"offset": [578, 604], "op": "AND", "path": "0"}, "192": {"fn": "Voting.getWinnerName", "offset": [578, 604], "op": "DUP2", "path": "0"}, "193": {"fn": "Voting.getWinnerName", "offset": [578, 604], "op": "JUMP", "path": "0"}, "194": {"fn": "Voting.getWinnerName", "offset": [578, 604], "op": "JUMPDEST", "path": "0"}, "195": {"fn": "Voting.getWinnerName", "offset": [578, 604], "op": "PUSH1", "path": "0", "value": "0x40"}, "197": {"fn": "Voting.getWinnerName", "offset": [578, 604], "op": "MLOAD", "path": "0"}, "198": {"op": "PUSH1", "value": "0x1"}, "200": {"op": "PUSH1", "value": "0x1"}, "202": {"op": "PUSH1", "value": "0xA0"}, "204": {"op": "SHL"}, "205": {"op": "SUB"}, "206": {"op": "SWAP1"}, "207": {"op": "SWAP2"}, "208": {"op": "AND"}, "209": {"op": "DUP2"}, "210": {"op": "MSTORE"}, "211": {"op": "PUSH1", "value": "0x20"}, "213": {"op": "ADD"}, "214": {"offset": [578, 604], "op": "JUMPDEST", "path": "0"}, "215": {"fn": "Voting.getWinnerName", "offset": [578, 604], "op": "PUSH1", "path": "0", "value": "0x40"}, "217": {"fn": "Voting.getWinnerName", "offset": [578, 604], "op": "MLOAD", "path": "0"}, "218": {"fn": "Voting.getWinnerName", "offset": [578, 604], "op": "DUP1", "path": "0"}, "219": {"fn": "Voting.getWinnerName", "offset": [578, 604], "op": "SWAP2", "path": "0"}, "220": {"fn": "Voting.getWinnerName", "offset": [578, 604], "op": "SUB", "path": "0"}, "221": {"fn": "Voting.getWinnerName", "offset": [578, 604], "op": "SWAP1", "path": "0"}, "222": {"fn": "Voting.getWinnerName", "offset": [578, 604], "op": "RETURN", "path": "0"}, "223": {"offset": [815, 844], "op": "JUMPDEST", "path": "0"}, "224": {"fn": "Voting.getWinnerName", "offset": [815, 844], "op": "PUSH2", "path": "0", "value": "0xF2"}, "227": {"fn": "Voting.getWinnerName", "offset": [815, 844], "op": "PUSH2", "path": "0", "value": "0xED"}, "230": {"fn": "Voting.getWinnerName", "offset": [815, 844], "op": "CALLDATASIZE", "path": "0"}, "231": {"fn": "Voting.getWinnerName", "offset": [815, 844], "op": "PUSH1", "path": "0", "value": "0x4"}, "233": {"fn": "Voting.getWinnerName", "offset": [815, 844], "op": "PUSH2", "path": "0", "value": "0x53B"}, "236": {"fn": "Voting.getWinnerName", "jump": "i", "offset": [815, 844], "op": "JUMP", "path": "0"}, "237": {"fn": "Voting.getWinnerName", "offset": [815, 844], "op": "JUMPDEST", "path": "0"}, "238": {"fn": "Voting.getWinnerName", "offset": [815, 844], "op": "PUSH2", "path": "0", "value": "0x2D4"}, "241": {"fn": "Voting.getWinnerName", "jump": "i", "offset": [815, 844], "op": "JUMP", "path": "0"}, "242": {"fn": "Voting.getWinnerName", "offset": [815, 844], "op": "JUMPDEST", "path": "0"}, "243": {"fn": "Voting.getWinnerName", "offset": [815, 844], "op": "PUSH1", "path": "0", "value": "0x40"}, "245": {"fn": "Voting.getWinnerName", "offset": [815, 844], "op": "MLOAD", "path": "0"}, "246": {"fn": "Voting.getWinnerName", "offset": [815, 844], "op": "PUSH2", "path": "0", "value": "0xD6"}, "249": {"fn": "Voting.getWinnerName", "offset": [815, 844], "op": "SWAP3", "path": "0"}, "250": {"fn": "Voting.getWinnerName", "offset": [815, 844], "op": "SWAP2", "path": "0"}, "251": {"fn": "Voting.getWinnerName", "offset": [815, 844], "op": "SWAP1", "path": "0"}, "252": {"fn": "Voting.getWinnerName", "offset": [815, 844], "op": "PUSH2", "path": "0", "value": "0x5A1"}, "255": {"fn": "Voting.getWinnerName", "jump": "i", "offset": [815, 844], "op": "JUMP", "path": "0"}, "256": {"offset": [712, 751], "op": "JUMPDEST", "path": "0"}, "257": {"fn": "Voting.getWinnerName", "offset": [712, 751], "op": "PUSH2", "path": "0", "value": "0x12D"}, "260": {"fn": "Voting.getWinnerName", "offset": [712, 751], "op": "PUSH2", "path": "0", "value": "0x10E"}, "263": {"fn": "Voting.getWinnerName", "offset": [712, 751], "op": "CALLDATASIZE", "path": "0"}, "264": {"fn": "Voting.getWinnerName", "offset": [712, 751], "op": "PUSH1", "path": "0", "value": "0x4"}, "266": {"fn": "Voting.getWinnerName", "offset": [712, 751], "op": "PUSH2", "path": "0", "value": "0x5C3"}, "269": {"fn": "Voting.getWinnerName", "jump": "i", "offset": [712, 751], "op": "JUMP", "path": "0"}, "270": {"fn": "Voting.getWinnerName", "offset": [712, 751], "op": "JUMPDEST", "path": "0"}, "271": {"fn": "Voting.getWinnerName", "offset": [712, 751], "op": "PUSH1", "path": "0", "value": "0x2"}, "273": {"fn": "Voting.getWinnerName", "offset": [712, 751], "op": "PUSH1", "path": "0", "value": "0x20"}, "275": {"fn": "Voting.getWinnerName", "offset": [712, 751], "op": "MSTORE", "path": "0"}, "276": {"fn": "Voting.getWinnerName", "offset": [712, 751], "op": "PUSH1", "path": "0", "value": "0x0"}, "278": {"fn": "Voting.getWinnerName", "offset": [712, 751], "op": "SWAP1", "path": "0"}, "279": {"fn": "Voting.getWinnerName", "offset": [712, 751], "op": "DUP2", "path": "0"}, "280": {"fn": "Voting.getWinnerName", "offset": [712, 751], "op": "MSTORE", "path": "0"}, "281": {"fn": "Voting.getWinnerName", "offset": [712, 751], "op": "PUSH1", "path": "0", "value": "0x40"}, "283": {"fn": "Voting.getWinnerName", "offset": [712, 751], "op": "SWAP1", "path": "0"}, "284": {"fn": "Voting.getWinnerName", "offset": [712, 751], "op": "KECCAK256", "path": "0"}, "285": {"fn": "Voting.getWinnerName", "offset": [712, 751], "op": "DUP1", "path": "0"}, "286": {"fn": "Voting.getWinnerName", "offset": [712, 751], "op": "SLOAD", "path": "0"}, "287": {"fn": "Voting.getWinnerName", "offset": [712, 751], "op": "PUSH1", "path": "0", "value": "0x1"}, "289": {"fn": "Voting.getWinnerName", "offset": [712, 751], "op": "SWAP1", "path": "0"}, "290": {"fn": "Voting.getWinnerName", "offset": [712, 751], "op": "SWAP2", "path": "0"}, "291": {"fn": "Voting.getWinnerName", "offset": [712, 751], "op": "ADD", "path": "0"}, "292": {"fn": "Voting.getWinnerName", "offset": [712, 751], "op": "SLOAD", "path": "0"}, "293": {"fn": "Voting.getWinnerName", "offset": [712, 751], "op": "PUSH1", "path": "0", "value": "0xFF"}, "295": {"fn": "Voting.getWinnerName", "offset": [712, 751], "op": "SWAP1", "path": "0"}, "296": {"fn": "Voting.getWinnerName", "offset": [712, 751], "op": "SWAP2", "path": "0"}, "297": {"fn": "Voting.getWinnerName", "offset": [712, 751], "op": "AND", "path": "0"}, "298": {"fn": "Voting.getWinnerName", "offset": [712, 751], "op": "SWAP1", "path": "0"}, "299": {"fn": "Voting.getWinnerName", "offset": [712, 751], "op": "DUP3", "path": "0"}, "300": {"fn": "Voting.getWinnerName", "offset": [712, 751], "op": "JUMP", "path": "0"}, "301": {"fn": "Voting.getWinnerName", "offset": [712, 751], "op": "JUMPDEST", "path": "0"}, "302": {"fn": "Voting.getWinnerName", "offset": [712, 751], "op": "PUSH1", "path": "0", "value": "0x40"}, "304": {"fn": "Voting.getWinnerName", "offset": [712, 751], "op": "DUP1", "path": "0"}, "305": {"fn": "Voting.getWinnerName", "offset": [712, 751], "op": "MLOAD", "path": "0"}, "306": {"op": "SWAP3"}, "307": {"op": "ISZERO"}, "308": {"op": "ISZERO"}, "309": {"op": "DUP4"}, "310": {"op": "MSTORE"}, "311": {"op": "PUSH1", "value": "0x20"}, "313": {"op": "DUP4"}, "314": {"op": "ADD"}, "315": {"op": "SWAP2"}, "316": {"op": "SWAP1"}, "317": {"op": "SWAP2"}, "318": {"op": "MSTORE"}, "319": {"op": "ADD"}, "320": {"offset": [712, 751], "op": "PUSH2", "path": "0", "value": "0xD6"}, "323": {"op": "JUMP"}, "324": {"fn": "Voting.winningCandidate", "offset": [1556, 1927], "op": "JUMPDEST", "path": "0"}, "325": {"fn": "Voting.winningCandidate", "offset": [1556, 1927], "op": "PUSH2", "path": "0", "value": "0x14C"}, "328": {"fn": "Voting.winningCandidate", "offset": [1556, 1927], "op": "PUSH2", "path": "0", "value": "0x390"}, "331": {"fn": "Voting.winningCandidate", "jump": "i", "offset": [1556, 1927], "op": "JUMP", "path": "0"}, "332": {"fn": "Voting.winningCandidate", "offset": [1556, 1927], "op": "JUMPDEST", "path": "0"}, "333": {"fn": "Voting.winningCandidate", "offset": [1556, 1927], "op": "PUSH1", "path": "0", "value": "0x40"}, "335": {"fn": "Voting.winningCandidate", "offset": [1556, 1927], "op": "MLOAD", "path": "0"}, "336": {"op": "SWAP1"}, "337": {"op": "DUP2"}, "338": {"op": "MSTORE"}, "339": {"op": "PUSH1", "value": "0x20"}, "341": {"op": "ADD"}, "342": {"fn": "Voting.winningCandidate", "offset": [1556, 1927], "op": "PUSH2", "path": "0", "value": "0xD6"}, "345": {"op": "JUMP"}, "346": {"offset": [351, 387], "op": "JUMPDEST", "path": "0"}, "347": {"fn": "Voting.winningCandidate", "offset": [351, 387], "op": "PUSH1", "path": "0", "value": "0x1"}, "349": {"fn": "Voting.winningCandidate", "offset": [351, 387], "op": "SLOAD", "path": "0"}, "350": {"fn": "Voting.winningCandidate", "offset": [351, 387], "op": "PUSH2", "path": "0", "value": "0x167"}, "353": {"fn": "Voting.winningCandidate", "offset": [351, 387], "op": "SWAP1", "path": "0"}, "354": {"fn": "Voting.winningCandidate", "offset": [351, 387], "op": "PUSH1", "path": "0", "value": "0xFF"}, "356": {"fn": "Voting.winningCandidate", "offset": [351, 387], "op": "AND", "path": "0"}, "357": {"fn": "Voting.winningCandidate", "offset": [351, 387], "op": "DUP2", "path": "0"}, "358": {"fn": "Voting.winningCandidate", "offset": [351, 387], "op": "JUMP", "path": "0"}, "359": {"fn": "Voting.winningCandidate", "offset": [351, 387], "op": "JUMPDEST", "path": "0"}, "360": {"fn": "Voting.winningCandidate", "offset": [351, 387], "op": "PUSH1", "path": "0", "value": "0x40"}, "362": {"fn": "Voting.winningCandidate", "offset": [351, 387], "op": "MLOAD", "path": "0"}, "363": {"fn": "Voting.winningCandidate", "offset": [351, 387], "op": "PUSH2", "path": "0", "value": "0xD6"}, "366": {"fn": "Voting.winningCandidate", "offset": [351, 387], "op": "SWAP2", "path": "0"}, "367": {"fn": "Voting.winningCandidate", "offset": [351, 387], "op": "SWAP1", "path": "0"}, "368": {"fn": "Voting.winningCandidate", "offset": [351, 387], "op": "PUSH2", "path": "0", "value": "0x609"}, "371": {"fn": "Voting.winningCandidate", "jump": "i", "offset": [351, 387], "op": "JUMP", "path": "0"}, "372": {"offset": [321, 345], "op": "JUMPDEST", "path": "0"}, "373": {"fn": "Voting.winningCandidate", "offset": [321, 345], "op": "PUSH2", "path": "0", "value": "0x17C"}, "376": {"fn": "Voting.winningCandidate", "offset": [321, 345], "op": "PUSH2", "path": "0", "value": "0x40D"}, "379": {"fn": "Voting.winningCandidate", "jump": "i", "offset": [321, 345], "op": "JUMP", "path": "0"}, "380": {"fn": "Voting.winningCandidate", "offset": [321, 345], "op": "JUMPDEST", "path": "0"}, "381": {"fn": "Voting.winningCandidate", "offset": [321, 345], "op": "PUSH1", "path": "0", "value": "0x40"}, "383": {"fn": "Voting.winningCandidate", "offset": [321, 345], "op": "MLOAD", "path": "0"}, "384": {"fn": "Voting.winningCandidate", "offset": [321, 345], "op": "PUSH2", "path": "0", "value": "0xD6"}, "387": {"fn": "Voting.winningCandidate", "offset": [321, 345], "op": "SWAP2", "path": "0"}, "388": {"fn": "Voting.winningCandidate", "offset": [321, 345], "op": "SWAP1", "path": "0"}, "389": {"fn": "Voting.winningCandidate", "offset": [321, 345], "op": "PUSH2", "path": "0", "value": "0x631"}, "392": {"fn": "Voting.winningCandidate", "jump": "i", "offset": [321, 345], "op": "JUMP", "path": "0"}, "393": {"fn": "Voting.vote", "offset": [1215, 1548], "op": "JUMPDEST", "path": "0"}, "394": {"fn": "Voting.vote", "offset": [1292, 1302], "op": "CALLER", "path": "0"}, "395": {"fn": "Voting.vote", "offset": [1262, 1282], "op": "PUSH1", "path": "0", "value": "0x0"}, "397": {"fn": "Voting.vote", "offset": [1285, 1303], "op": "SWAP1", "path": "0"}, "398": {"fn": "Voting.vote", "offset": [1285, 1303], "op": "DUP2", "path": "0"}, "399": {"fn": "Voting.vote", "offset": [1285, 1303], "op": "MSTORE", "path": "0"}, "400": {"fn": "Voting.vote", "offset": [1285, 1291], "op": "PUSH1", "path": "0", "value": "0x2"}, "402": {"fn": "Voting.vote", "offset": [1285, 1303], "op": "PUSH1", "path": "0", "value": "0x20"}, "404": {"fn": "Voting.vote", "offset": [1285, 1303], "op": "MSTORE", "path": "0"}, "405": {"fn": "Voting.vote", "offset": [1285, 1303], "op": "PUSH1", "path": "0", "value": "0x40"}, "407": {"fn": "Voting.vote", "offset": [1285, 1303], "op": "DUP2", "path": "0"}, "408": {"fn": "Voting.vote", "offset": [1285, 1303], "op": "KECCAK256", "path": "0"}, "409": {"fn": "Voting.vote", "offset": [1285, 1303], "op": "SWAP1", "path": "0"}, "410": {"fn": "Voting.vote", "offset": [1321, 1335], "op": "PUSH1", "path": "0", "statement": 0, "value": "0x1"}, "412": {"fn": "Voting.vote", "offset": [1321, 1335], "op": "DUP1", "path": "0"}, "413": {"fn": "Voting.vote", "offset": [1321, 1335], "op": "SLOAD", "path": "0"}, "414": {"fn": "Voting.vote", "offset": [1321, 1335], "op": "PUSH1", "path": "0", "value": "0xFF"}, "416": {"fn": "Voting.vote", "offset": [1321, 1335], "op": "AND", "path": "0"}, "417": {"fn": "Voting.vote", "offset": [1321, 1335], "op": "SWAP1", "path": "0"}, "418": {"fn": "Voting.vote", "offset": [1321, 1356], "op": "DUP2", "path": "0"}, "419": {"fn": "Voting.vote", "offset": [1321, 1356], "op": "GT", "path": "0"}, "420": {"fn": "Voting.vote", "offset": [1321, 1356], "op": "ISZERO", "path": "0"}, "421": {"fn": "Voting.vote", "offset": [1321, 1356], "op": "PUSH2", "path": "0", "value": "0x1B0"}, "424": {"fn": "Voting.vote", "offset": [1321, 1356], "op": "JUMPI", "path": "0"}, "425": {"fn": "Voting.vote", "offset": [1321, 1356], "op": "PUSH2", "path": "0", "value": "0x1B0"}, "428": {"fn": "Voting.vote", "offset": [1321, 1356], "op": "PUSH2", "path": "0", "value": "0x5F3"}, "431": {"fn": "Voting.vote", "jump": "i", "offset": [1321, 1356], "op": "JUMP", "path": "0"}, "432": {"fn": "Voting.vote", "offset": [1321, 1356], "op": "JUMPDEST", "path": "0"}, "433": {"branch": 10, "fn": "Voting.vote", "offset": [1321, 1356], "op": "EQ", "path": "0"}, "434": {"fn": "Voting.vote", "offset": [1313, 1375], "op": "PUSH2", "path": "0", "value": "0x1F3"}, "437": {"branch": 10, "fn": "Voting.vote", "offset": [1313, 1375], "op": "JUMPI", "path": "0"}, "438": {"fn": "Voting.vote", "offset": [1313, 1375], "op": "PUSH1", "path": "0", "value": "0x40"}, "440": {"fn": "Voting.vote", "offset": [1313, 1375], "op": "MLOAD", "path": "0"}, "441": {"op": "PUSH3", "value": "0x461BCD"}, "445": {"op": "PUSH1", "value": "0xE5"}, "447": {"op": "SHL"}, "448": {"fn": "Voting.vote", "offset": [1313, 1375], "op": "DUP2", "path": "0"}, "449": {"fn": "Voting.vote", "offset": [1313, 1375], "op": "MSTORE", "path": "0"}, "450": {"op": "PUSH1", "value": "0x20"}, "452": {"fn": "Voting.vote", "offset": [1313, 1375], "op": "PUSH1", "path": "0", "value": "0x4"}, "454": {"fn": "Voting.vote", "offset": [1313, 1375], "op": "DUP3", "path": "0"}, "455": {"fn": "Voting.vote", "offset": [1313, 1375], "op": "ADD", "path": "0"}, "456": {"op": "MSTORE"}, "457": {"op": "PUSH1", "value": "0xE"}, "459": {"op": "PUSH1", "value": "0x24"}, "461": {"op": "DUP3"}, "462": {"op": "ADD"}, "463": {"op": "MSTORE"}, "464": {"op": "PUSH14", "value": "0x3B37BA34B7339031B637B9B2B217"}, "479": {"op": "PUSH1", "value": "0x91"}, "481": {"op": "SHL"}, "482": {"op": "PUSH1", "value": "0x44"}, "484": {"op": "DUP3"}, "485": {"op": "ADD"}, "486": {"op": "MSTORE"}, "487": {"op": "PUSH1", "value": "0x64"}, "489": {"op": "ADD"}, "490": {"fn": "Voting.vote", "offset": [1313, 1375], "op": "JUMPDEST", "path": "0"}, "491": {"fn": "Voting.vote", "offset": [1313, 1375], "op": "PUSH1", "path": "0", "value": "0x40"}, "493": {"fn": "Voting.vote", "offset": [1313, 1375], "op": "MLOAD", "path": "0"}, "494": {"fn": "Voting.vote", "offset": [1313, 1375], "op": "DUP1", "path": "0"}, "495": {"fn": "Voting.vote", "offset": [1313, 1375], "op": "SWAP2", "path": "0"}, "496": {"fn": "Voting.vote", "offset": [1313, 1375], "op": "SUB", "path": "0"}, "497": {"fn": "Voting.vote", "offset": [1313, 1375], "op": "SWAP1", "path": "0"}, "498": {"fn": "Voting.vote", "offset": [1313, 1375], "op": "REVERT", "optimizer_revert": true, "path": "0"}, "499": {"fn": "Voting.vote", "offset": [1313, 1375], "op": "JUMPDEST", "path": "0"}, "500": {"fn": "Voting.vote", "offset": [1394, 1406], "op": "DUP1", "path": "0", "statement": 1}, "501": {"fn": "Voting.vote", "offset": [1394, 1406], "op": "SLOAD", "path": "0"}, "502": {"fn": "Voting.vote", "offset": [1394, 1406], "op": "PUSH1", "path": "0", "value": "0xFF"}, "504": {"fn": "Voting.vote", "offset": [1394, 1406], "op": "AND", "path": "0"}, "505": {"branch": 11, "fn": "Voting.vote", "offset": [1393, 1406], "op": "ISZERO", "path": "0"}, "506": {"fn": "Voting.vote", "offset": [1385, 1425], "op": "PUSH2", "path": "0", "value": "0x236"}, "509": {"branch": 11, "fn": "Voting.vote", "offset": [1385, 1425], "op": "JUMPI", "path": "0"}, "510": {"fn": "Voting.vote", "offset": [1385, 1425], "op": "PUSH1", "path": "0", "value": "0x40"}, "512": {"fn": "Voting.vote", "offset": [1385, 1425], "op": "MLOAD", "path": "0"}, "513": {"op": "PUSH3", "value": "0x461BCD"}, "517": {"op": "PUSH1", "value": "0xE5"}, "519": {"op": "SHL"}, "520": {"fn": "Voting.vote", "offset": [1385, 1425], "op": "DUP2", "path": "0"}, "521": {"fn": "Voting.vote", "offset": [1385, 1425], "op": "MSTORE", "path": "0"}, "522": {"op": "PUSH1", "value": "0x20"}, "524": {"fn": "Voting.vote", "offset": [1385, 1425], "op": "PUSH1", "path": "0", "value": "0x4"}, "526": {"fn": "Voting.vote", "offset": [1385, 1425], "op": "DUP3", "path": "0"}, "527": {"fn": "Voting.vote", "offset": [1385, 1425], "op": "ADD", "path": "0"}, "528": {"op": "MSTORE"}, "529": {"op": "PUSH1", "value": "0xE"}, "531": {"op": "PUSH1", "value": "0x24"}, "533": {"op": "DUP3"}, "534": {"op": "ADD"}, "535": {"op": "MSTORE"}, "536": {"op": "PUSH14", "value": "0x20B63932B0B23C903B37BA32B217"}, "551": {"op": "PUSH1", "value": "0x91"}, "553": {"op": "SHL"}, "554": {"op": "PUSH1", "value": "0x44"}, "556": {"op": "DUP3"}, "557": {"op": "ADD"}, "558": {"op": "MSTORE"}, "559": {"op": "PUSH1", "value": "0x64"}, "561": {"op": "ADD"}, "562": {"fn": "Voting.vote", "offset": [1385, 1425], "op": "PUSH2", "path": "0", "value": "0x1EA"}, "565": {"op": "JUMP"}, "566": {"fn": "Voting.vote", "offset": [1385, 1425], "op": "JUMPDEST", "path": "0"}, "567": {"fn": "Voting.vote", "offset": [1435, 1454], "op": "DUP1", "path": "0", "statement": 2}, "568": {"fn": "Voting.vote", "offset": [1435, 1454], "op": "SLOAD", "path": "0"}, "569": {"op": "PUSH1", "value": "0xFF"}, "571": {"op": "NOT"}, "572": {"fn": "Voting.vote", "offset": [1435, 1454], "op": "AND", "path": "0"}, "573": {"fn": "Voting.vote", "offset": [1450, 1454], "op": "PUSH1", "path": "0", "value": "0x1"}, "575": {"fn": "Voting.vote", "offset": [1435, 1454], "op": "SWAP1", "path": "0"}, "576": {"fn": "Voting.vote", "offset": [1435, 1454], "op": "DUP2", "path": "0"}, "577": {"fn": "Voting.vote", "offset": [1435, 1454], "op": "OR", "path": "0"}, "578": {"fn": "Voting.vote", "offset": [1435, 1454], "op": "DUP3", "path": "0"}, "579": {"fn": "Voting.vote", "offset": [1435, 1454], "op": "SSTORE", "path": "0"}, "580": {"fn": "Voting.vote", "offset": [1464, 1475], "op": "DUP2", "path": "0", "statement": 3}, "581": {"fn": "Voting.vote", "offset": [1464, 1475], "op": "DUP2", "path": "0"}, "582": {"fn": "Voting.vote", "offset": [1464, 1475], "op": "ADD", "path": "0"}, "583": {"fn": "Voting.vote", "offset": [1464, 1487], "op": "DUP4", "path": "0"}, "584": {"fn": "Voting.vote", "offset": [1464, 1487], "op": "SWAP1", "path": "0"}, "585": {"fn": "Voting.vote", "offset": [1464, 1487], "op": "SSTORE", "path": "0"}, "586": {"fn": "Voting.vote", "offset": [1505, 1515], "op": "PUSH1", "path": "0", "statement": 4, "value": "0x3"}, "588": {"fn": "Voting.vote", "offset": [1505, 1526], "op": "DUP1", "path": "0"}, "589": {"fn": "Voting.vote", "offset": [1505, 1526], "op": "SLOAD", "path": "0"}, "590": {"fn": "Voting.vote", "offset": [1478, 1487], "op": "DUP5", "path": "0"}, "591": {"fn": "Voting.vote", "offset": [1478, 1487], "op": "SWAP1", "path": "0"}, "592": {"fn": "Voting.vote", "offset": [1505, 1526], "op": "DUP2", "path": "0"}, "593": {"fn": "Voting.vote", "offset": [1505, 1526], "op": "LT", "path": "0"}, "594": {"fn": "Voting.vote", "offset": [1505, 1526], "op": "PUSH2", "path": "0", "value": "0x25D"}, "597": {"fn": "Voting.vote", "offset": [1505, 1526], "op": "JUMPI", "path": "0"}, "598": {"fn": "Voting.vote", "offset": [1505, 1526], "op": "PUSH2", "path": "0", "value": "0x25D"}, "601": {"fn": "Voting.vote", "offset": [1505, 1526], "op": "PUSH2", "path": "0", "value": "0x644"}, "604": {"fn": "Voting.vote", "jump": "i", "offset": [1505, 1526], "op": "JUMP", "path": "0"}, "605": {"fn": "Voting.vote", "offset": [1505, 1526], "op": "JUMPDEST", "path": "0"}, "606": {"fn": "Voting.vote", "offset": [1505, 1526], "op": "SWAP1", "path": "0"}, "607": {"fn": "Voting.vote", "offset": [1505, 1526], "op": "PUSH1", "path": "0", "value": "0x0"}, "609": {"fn": "Voting.vote", "offset": [1505, 1526], "op": "MSTORE", "path": "0"}, "610": {"fn": "Voting.vote", "offset": [1505, 1526], "op": "PUSH1", "path": "0", "value": "0x20"}, "612": {"fn": "Voting.vote", "offset": [1505, 1526], "op": "PUSH1", "path": "0", "value": "0x0"}, "614": {"fn": "Voting.vote", "offset": [1505, 1526], "op": "KECCAK256", "path": "0"}, "615": {"fn": "Voting.vote", "offset": [1505, 1526], "op": "SWAP1", "path": "0"}, "616": {"fn": "Voting.vote", "offset": [1505, 1526], "op": "PUSH1", "path": "0", "value": "0x2"}, "618": {"fn": "Voting.vote", "offset": [1505, 1526], "op": "MUL", "path": "0"}, "619": {"fn": "Voting.vote", "offset": [1505, 1526], "op": "ADD", "path": "0"}, "620": {"fn": "Voting.vote", "offset": [1505, 1536], "op": "PUSH1", "path": "0", "value": "0x1"}, "622": {"fn": "Voting.vote", "offset": [1505, 1536], "op": "ADD", "path": "0"}, "623": {"fn": "Voting.vote", "offset": [1505, 1536], "op": "PUSH1", "path": "0", "value": "0x0"}, "625": {"fn": "Voting.vote", "offset": [1505, 1541], "op": "DUP3", "path": "0"}, "626": {"fn": "Voting.vote", "offset": [1505, 1541], "op": "DUP3", "path": "0"}, "627": {"fn": "Voting.vote", "offset": [1505, 1541], "op": "SLOAD", "path": "0"}, "628": {"fn": "Voting.vote", "offset": [1505, 1541], "op": "PUSH2", "path": "0", "value": "0x27D"}, "631": {"fn": "Voting.vote", "offset": [1505, 1541], "op": "SWAP2", "path": "0"}, "632": {"fn": "Voting.vote", "offset": [1505, 1541], "op": "SWAP1", "path": "0"}, "633": {"fn": "Voting.vote", "offset": [1505, 1541], "op": "PUSH2", "path": "0", "value": "0x670"}, "636": {"fn": "Voting.vote", "jump": "i", "offset": [1505, 1541], "op": "JUMP", "path": "0"}, "637": {"fn": "Voting.vote", "offset": [1505, 1541], "op": "JUMPDEST", "path": "0"}, "638": {"fn": "Voting.vote", "offset": [1505, 1541], "op": "SWAP1", "path": "0"}, "639": {"fn": "Voting.vote", "offset": [1505, 1541], "op": "SWAP2", "path": "0"}, "640": {"fn": "Voting.vote", "offset": [1505, 1541], "op": "SSTORE", "path": "0"}, "641": {"op": "POP"}, "642": {"op": "POP"}, "643": {"op": "POP"}, "644": {"op": "POP"}, "645": {"fn": "Voting.vote", "jump": "o", "offset": [1215, 1548], "op": "JUMP", "path": "0"}, "646": {"fn": "Voting.getWinnerName", "offset": [1933, 2081], "op": "JUMPDEST", "path": "0"}, "647": {"fn": "Voting.getWinnerName", "offset": [1995, 2016], "op": "PUSH1", "path": "0", "statement": 5, "value": "0x1"}, "649": {"fn": "Voting.getWinnerName", "offset": [1980, 2016], "op": "DUP1", "path": "0"}, "650": {"fn": "Voting.getWinnerName", "offset": [1980, 2016], "op": "SLOAD", "path": "0"}, "651": {"op": "PUSH1", "value": "0xFF"}, "653": {"op": "NOT"}, "654": {"fn": "Voting.getWinnerName", "offset": [1980, 2016], "op": "AND", "path": "0"}, "655": {"fn": "Voting.getWinnerName", "offset": [1980, 2016], "op": "DUP2", "path": "0"}, "656": {"fn": "Voting.getWinnerName", "offset": [1980, 2016], "op": "OR", "path": "0"}, "657": {"fn": "Voting.getWinnerName", "offset": [1980, 2016], "op": "SWAP1", "path": "0"}, "658": {"fn": "Voting.getWinnerName", "offset": [1980, 2016], "op": "SSTORE", "path": "0"}, "659": {"fn": "Voting.getWinnerName", "offset": [2039, 2049], "op": "PUSH1", "path": "0", "statement": 6, "value": "0x3"}, "661": {"fn": "Voting.getWinnerName", "offset": [2050, 2068], "op": "PUSH2", "path": "0", "value": "0x29C"}, "664": {"fn": "Voting.getWinnerName", "offset": [2050, 2066], "op": "PUSH2", "path": "0", "value": "0x390"}, "667": {"fn": "Voting.getWinnerName", "jump": "i", "offset": [2050, 2068], "op": "JUMP", "path": "0"}, "668": {"fn": "Voting.getWinnerName", "offset": [2050, 2068], "op": "JUMPDEST", "path": "0"}, "669": {"fn": "Voting.getWinnerName", "offset": [2039, 2069], "op": "DUP2", "path": "0"}, "670": {"fn": "Voting.getWinnerName", "offset": [2039, 2069], "op": "SLOAD", "path": "0"}, "671": {"fn": "Voting.getWinnerName", "offset": [2039, 2069], "op": "DUP2", "path": "0"}, "672": {"fn": "Voting.getWinnerName", "offset": [2039, 2069], "op": "LT", "path": "0"}, "673": {"fn": "Voting.getWinnerName", "offset": [2039, 2069], "op": "PUSH2", "path": "0", "value": "0x2AC"}, "676": {"fn": "Voting.getWinnerName", "offset": [2039, 2069], "op": "JUMPI", "path": "0"}, "677": {"fn": "Voting.getWinnerName", "offset": [2039, 2069], "op": "PUSH2", "path": "0", "value": "0x2AC"}, "680": {"fn": "Voting.getWinnerName", "offset": [2039, 2069], "op": "PUSH2", "path": "0", "value": "0x644"}, "683": {"fn": "Voting.getWinnerName", "jump": "i", "offset": [2039, 2069], "op": "JUMP", "path": "0"}, "684": {"fn": "Voting.getWinnerName", "offset": [2039, 2069], "op": "JUMPDEST", "path": "0"}, "685": {"fn": "Voting.getWinnerName", "offset": [2039, 2069], "op": "PUSH1", "path": "0", "value": "0x0"}, "687": {"fn": "Voting.getWinnerName", "offset": [2039, 2069], "op": "SWAP2", "path": "0"}, "688": {"fn": "Voting.getWinnerName", "offset": [2039, 2069], "op": "DUP3", "path": "0"}, "689": {"fn": "Voting.getWinnerName", "offset": [2039, 2069], "op": "MSTORE", "path": "0"}, "690": {"fn": "Voting.getWinnerName", "offset": [2039, 2069], "op": "PUSH1", "path": "0", "value": "0x20"}, "692": {"fn": "Voting.getWinnerName", "offset": [2039, 2069], "op": "DUP3", "path": "0"}, "693": {"fn": "Voting.getWinnerName", "offset": [2039, 2069], "op": "KECCAK256", "path": "0"}, "694": {"fn": "Voting.getWinnerName", "offset": [2039, 2069], "op": "PUSH1", "path": "0", "value": "0x2"}, "696": {"fn": "Voting.getWinnerName", "offset": [2039, 2069], "op": "SWAP1", "path": "0"}, "697": {"fn": "Voting.getWinnerName", "offset": [2039, 2069], "op": "SWAP2", "path": "0"}, "698": {"fn": "Voting.getWinnerName", "offset": [2039, 2069], "op": "MUL", "path": "0"}, "699": {"fn": "Voting.getWinnerName", "offset": [2039, 2069], "op": "ADD", "path": "0"}, "700": {"fn": "Voting.getWinnerName", "offset": [2026, 2074], "op": "DUP1", "path": "0"}, "701": {"fn": "Voting.getWinnerName", "offset": [2026, 2074], "op": "SLOAD", "path": "0"}, "702": {"fn": "Voting.getWinnerName", "offset": [2026, 2074], "op": "PUSH2", "path": "0", "value": "0x2C6"}, "705": {"fn": "Voting.getWinnerName", "offset": [2026, 2074], "op": "SWAP1", "path": "0"}, "706": {"fn": "Voting.getWinnerName", "offset": [2026, 2074], "op": "PUSH2", "path": "0", "value": "0x688"}, "709": {"fn": "Voting.getWinnerName", "jump": "i", "offset": [2026, 2074], "op": "JUMP", "path": "0"}, "710": {"fn": "Voting.getWinnerName", "offset": [2026, 2074], "op": "JUMPDEST", "path": "0"}, "711": {"fn": "Voting.getWinnerName", "offset": [2026, 2074], "op": "PUSH2", "path": "0", "value": "0x2D1"}, "714": {"fn": "Voting.getWinnerName", "offset": [2026, 2074], "op": "SWAP3", "path": "0"}, "715": {"fn": "Voting.getWinnerName", "offset": [2026, 2074], "op": "SWAP2", "path": "0"}, "716": {"fn": "Voting.getWinnerName", "offset": [2026, 2074], "op": "SWAP1", "path": "0"}, "717": {"fn": "Voting.getWinnerName", "offset": [2026, 2074], "op": "PUSH2", "path": "0", "value": "0x49B"}, "720": {"fn": "Voting.getWinnerName", "jump": "i", "offset": [2026, 2074], "op": "JUMP", "path": "0"}, "721": {"fn": "Voting.getWinnerName", "offset": [2026, 2074], "op": "JUMPDEST", "path": "0"}, "722": {"fn": "Voting.getWinnerName", "offset": [2026, 2074], "op": "POP", "path": "0"}, "723": {"fn": "Voting.getWinnerName", "jump": "o", "offset": [1933, 2081], "op": "JUMP", "path": "0"}, "724": {"offset": [815, 844], "op": "JUMPDEST", "path": "0"}, "725": {"fn": "Voting.getWinnerName", "offset": [815, 844], "op": "PUSH1", "path": "0", "value": "0x3"}, "727": {"fn": "Voting.getWinnerName", "offset": [815, 844], "op": "DUP2", "path": "0"}, "728": {"fn": "Voting.getWinnerName", "offset": [815, 844], "op": "DUP2", "path": "0"}, "729": {"fn": "Voting.getWinnerName", "offset": [815, 844], "op": "SLOAD", "path": "0"}, "730": {"fn": "Voting.getWinnerName", "offset": [815, 844], "op": "DUP2", "path": "0"}, "731": {"fn": "Voting.getWinnerName", "offset": [815, 844], "op": "LT", "path": "0"}, "732": {"fn": "Voting.getWinnerName", "offset": [815, 844], "op": "PUSH2", "path": "0", "value": "0x2E4"}, "735": {"fn": "Voting.getWinnerName", "offset": [815, 844], "op": "JUMPI", "path": "0"}, "736": {"fn": "Voting.getWinnerName", "offset": [815, 844], "op": "PUSH1", "path": "0", "value": "0x0"}, "738": {"fn": "Voting.getWinnerName", "offset": [815, 844], "op": "DUP1", "path": "0"}, "739": {"fn": "Voting.getWinnerName", "offset": [815, 844], "op": "REVERT", "path": "0"}, "740": {"fn": "Voting.getWinnerName", "offset": [815, 844], "op": "JUMPDEST", "path": "0"}, "741": {"fn": "Voting.getWinnerName", "offset": [815, 844], "op": "SWAP1", "path": "0"}, "742": {"fn": "Voting.getWinnerName", "offset": [815, 844], "op": "PUSH1", "path": "0", "value": "0x0"}, "744": {"fn": "Voting.getWinnerName", "offset": [815, 844], "op": "MSTORE", "path": "0"}, "745": {"fn": "Voting.getWinnerName", "offset": [815, 844], "op": "PUSH1", "path": "0", "value": "0x20"}, "747": {"fn": "Voting.getWinnerName", "offset": [815, 844], "op": "PUSH1", "path": "0", "value": "0x0"}, "749": {"fn": "Voting.getWinnerName", "offset": [815, 844], "op": "KECCAK256", "path": "0"}, "750": {"fn": "Voting.getWinnerName", "offset": [815, 844], "op": "SWAP1", "path": "0"}, "751": {"fn": "Voting.getWinnerName", "offset": [815, 844], "op": "PUSH1", "path": "0", "value": "0x2"}, "753": {"fn": "Voting.getWinnerName", "offset": [815, 844], "op": "MUL", "path": "0"}, "754": {"fn": "Voting.getWinnerName", "offset": [815, 844], "op": "ADD", "path": "0"}, "755": {"fn": "Voting.getWinnerName", "offset": [815, 844], "op": "PUSH1", "path": "0", "value": "0x0"}, "757": {"fn": "Voting.getWinnerName", "offset": [815, 844], "op": "SWAP2", "path": "0"}, "758": {"fn": "Voting.getWinnerName", "offset": [815, 844], "op": "POP", "path": "0"}, "759": {"fn": "Voting.getWinnerName", "offset": [815, 844], "op": "SWAP1", "path": "0"}, "760": {"fn": "Voting.getWinnerName", "offset": [815, 844], "op": "POP", "path": "0"}, "761": {"fn": "Voting.getWinnerName", "offset": [815, 844], "op": "DUP1", "path": "0"}, "762": {"fn": "Voting.getWinnerName", "offset": [815, 844], "op": "PUSH1", "path": "0", "value": "0x0"}, "764": {"fn": "Voting.getWinnerName", "offset": [815, 844], "op": "ADD", "path": "0"}, "765": {"fn": "Voting.getWinnerName", "offset": [815, 844], "op": "DUP1", "path": "0"}, "766": {"fn": "Voting.getWinnerName", "offset": [815, 844], "op": "SLOAD", "path": "0"}, "767": {"fn": "Voting.getWinnerName", "offset": [815, 844], "op": "PUSH2", "path": "0", "value": "0x307"}, "770": {"fn": "Voting.getWinnerName", "offset": [815, 844], "op": "SWAP1", "path": "0"}, "771": {"fn": "Voting.getWinnerName", "offset": [815, 844], "op": "PUSH2", "path": "0", "value": "0x688"}, "774": {"fn": "Voting.getWinnerName", "jump": "i", "offset": [815, 844], "op": "JUMP", "path": "0"}, "775": {"fn": "Voting.getWinnerName", "offset": [815, 844], "op": "JUMPDEST", "path": "0"}, "776": {"fn": "Voting.getWinnerName", "offset": [815, 844], "op": "DUP1", "path": "0"}, "777": {"fn": "Voting.getWinnerName", "offset": [815, 844], "op": "PUSH1", "path": "0", "value": "0x1F"}, "779": {"fn": "Voting.getWinnerName", "offset": [815, 844], "op": "ADD", "path": "0"}, "780": {"fn": "Voting.getWinnerName", "offset": [815, 844], "op": "PUSH1", "path": "0", "value": "0x20"}, "782": {"fn": "Voting.getWinnerName", "offset": [815, 844], "op": "DUP1", "path": "0"}, "783": {"fn": "Voting.getWinnerName", "offset": [815, 844], "op": "SWAP2", "path": "0"}, "784": {"fn": "Voting.getWinnerName", "offset": [815, 844], "op": "DIV", "path": "0"}, "785": {"fn": "Voting.getWinnerName", "offset": [815, 844], "op": "MUL", "path": "0"}, "786": {"fn": "Voting.getWinnerName", "offset": [815, 844], "op": "PUSH1", "path": "0", "value": "0x20"}, "788": {"fn": "Voting.getWinnerName", "offset": [815, 844], "op": "ADD", "path": "0"}, "789": {"fn": "Voting.getWinnerName", "offset": [815, 844], "op": "PUSH1", "path": "0", "value": "0x40"}, "791": {"fn": "Voting.getWinnerName", "offset": [815, 844], "op": "MLOAD", "path": "0"}, "792": {"fn": "Voting.getWinnerName", "offset": [815, 844], "op": "SWAP1", "path": "0"}, "793": {"fn": "Voting.getWinnerName", "offset": [815, 844], "op": "DUP2", "path": "0"}, "794": {"fn": "Voting.getWinnerName", "offset": [815, 844], "op": "ADD", "path": "0"}, "795": {"fn": "Voting.getWinnerName", "offset": [815, 844], "op": "PUSH1", "path": "0", "value": "0x40"}, "797": {"fn": "Voting.getWinnerName", "offset": [815, 844], "op": "MSTORE", "path": "0"}, "798": {"fn": "Voting.getWinnerName", "offset": [815, 844], "op": "DUP1", "path": "0"}, "799": {"fn": "Voting.getWinnerName", "offset": [815, 844], "op": "SWAP3", "path": "0"}, "800": {"fn": "Voting.getWinnerName", "offset": [815, 844], "op": "SWAP2", "path": "0"}, "801": {"fn": "Voting.getWinnerName", "offset": [815, 844], "op": "SWAP1", "path": "0"}, "802": {"fn": "Voting.getWinnerName", "offset": [815, 844], "op": "DUP2", "path": "0"}, "803": {"fn": "Voting.getWinnerName", "offset": [815, 844], "op": "DUP2", "path": "0"}, "804": {"fn": "Voting.getWinnerName", "offset": [815, 844], "op": "MSTORE", "path": "0"}, "805": {"fn": "Voting.getWinnerName", "offset": [815, 844], "op": "PUSH1", "path": "0", "value": "0x20"}, "807": {"fn": "Voting.getWinnerName", "offset": [815, 844], "op": "ADD", "path": "0"}, "808": {"fn": "Voting.getWinnerName", "offset": [815, 844], "op": "DUP3", "path": "0"}, "809": {"fn": "Voting.getWinnerName", "offset": [815, 844], "op": "DUP1", "path": "0"}, "810": {"fn": "Voting.getWinnerName", "offset": [815, 844], "op": "SLOAD", "path": "0"}, "811": {"fn": "Voting.getWinnerName", "offset": [815, 844], "op": "PUSH2", "path": "0", "value": "0x333"}, "814": {"fn": "Voting.getWinnerName", "offset": [815, 844], "op": "SWAP1", "path": "0"}, "815": {"fn": "Voting.getWinnerName", "offset": [815, 844], "op": "PUSH2", "path": "0", "value": "0x688"}, "818": {"fn": "Voting.getWinnerName", "jump": "i", "offset": [815, 844], "op": "JUMP", "path": "0"}, "819": {"fn": "Voting.getWinnerName", "offset": [815, 844], "op": "JUMPDEST", "path": "0"}, "820": {"fn": "Voting.getWinnerName", "offset": [815, 844], "op": "DUP1", "path": "0"}, "821": {"fn": "Voting.getWinnerName", "offset": [815, 844], "op": "ISZERO", "path": "0"}, "822": {"fn": "Voting.getWinnerName", "offset": [815, 844], "op": "PUSH2", "path": "0", "value": "0x380"}, "825": {"fn": "Voting.getWinnerName", "offset": [815, 844], "op": "JUMPI", "path": "0"}, "826": {"fn": "Voting.getWinnerName", "offset": [815, 844], "op": "DUP1", "path": "0"}, "827": {"fn": "Voting.getWinnerName", "offset": [815, 844], "op": "PUSH1", "path": "0", "value": "0x1F"}, "829": {"fn": "Voting.getWinnerName", "offset": [815, 844], "op": "LT", "path": "0"}, "830": {"fn": "Voting.getWinnerName", "offset": [815, 844], "op": "PUSH2", "path": "0", "value": "0x355"}, "833": {"fn": "Voting.getWinnerName", "offset": [815, 844], "op": "JUMPI", "path": "0"}, "834": {"fn": "Voting.getWinnerName", "offset": [815, 844], "op": "PUSH2", "path": "0", "value": "0x100"}, "837": {"fn": "Voting.getWinnerName", "offset": [815, 844], "op": "DUP1", "path": "0"}, "838": {"fn": "Voting.getWinnerName", "offset": [815, 844], "op": "DUP4", "path": "0"}, "839": {"fn": "Voting.getWinnerName", "offset": [815, 844], "op": "SLOAD", "path": "0"}, "840": {"fn": "Voting.getWinnerName", "offset": [815, 844], "op": "DIV", "path": "0"}, "841": {"fn": "Voting.getWinnerName", "offset": [815, 844], "op": "MUL", "path": "0"}, "842": {"fn": "Voting.getWinnerName", "offset": [815, 844], "op": "DUP4", "path": "0"}, "843": {"fn": "Voting.getWinnerName", "offset": [815, 844], "op": "MSTORE", "path": "0"}, "844": {"fn": "Voting.getWinnerName", "offset": [815, 844], "op": "SWAP2", "path": "0"}, "845": {"fn": "Voting.getWinnerName", "offset": [815, 844], "op": "PUSH1", "path": "0", "value": "0x20"}, "847": {"fn": "Voting.getWinnerName", "offset": [815, 844], "op": "ADD", "path": "0"}, "848": {"fn": "Voting.getWinnerName", "offset": [815, 844], "op": "SWAP2", "path": "0"}, "849": {"fn": "Voting.getWinnerName", "offset": [815, 844], "op": "PUSH2", "path": "0", "value": "0x380"}, "852": {"fn": "Voting.getWinnerName", "offset": [815, 844], "op": "JUMP", "path": "0"}, "853": {"fn": "Voting.getWinnerName", "offset": [815, 844], "op": "JUMPDEST", "path": "0"}, "854": {"fn": "Voting.getWinnerName", "offset": [815, 844], "op": "DUP3", "path": "0"}, "855": {"fn": "Voting.getWinnerName", "offset": [815, 844], "op": "ADD", "path": "0"}, "856": {"fn": "Voting.getWinnerName", "offset": [815, 844], "op": "SWAP2", "path": "0"}, "857": {"fn": "Voting.getWinnerName", "offset": [815, 844], "op": "SWAP1", "path": "0"}, "858": {"fn": "Voting.getWinnerName", "offset": [815, 844], "op": "PUSH1", "path": "0", "value": "0x0"}, "860": {"fn": "Voting.getWinnerName", "offset": [815, 844], "op": "MSTORE", "path": "0"}, "861": {"fn": "Voting.getWinnerName", "offset": [815, 844], "op": "PUSH1", "path": "0", "value": "0x20"}, "863": {"fn": "Voting.getWinnerName", "offset": [815, 844], "op": "PUSH1", "path": "0", "value": "0x0"}, "865": {"fn": "Voting.getWinnerName", "offset": [815, 844], "op": "KECCAK256", "path": "0"}, "866": {"fn": "Voting.getWinnerName", "offset": [815, 844], "op": "SWAP1", "path": "0"}, "867": {"fn": "Voting.getWinnerName", "offset": [815, 844], "op": "JUMPDEST", "path": "0"}, "868": {"fn": "Voting.getWinnerName", "offset": [815, 844], "op": "DUP2", "path": "0"}, "869": {"fn": "Voting.getWinnerName", "offset": [815, 844], "op": "SLOAD", "path": "0"}, "870": {"fn": "Voting.getWinnerName", "offset": [815, 844], "op": "DUP2", "path": "0"}, "871": {"fn": "Voting.getWinnerName", "offset": [815, 844], "op": "MSTORE", "path": "0"}, "872": {"fn": "Voting.getWinnerName", "offset": [815, 844], "op": "SWAP1", "path": "0"}, "873": {"fn": "Voting.getWinnerName", "offset": [815, 844], "op": "PUSH1", "path": "0", "value": "0x1"}, "875": {"fn": "Voting.getWinnerName", "offset": [815, 844], "op": "ADD", "path": "0"}, "876": {"fn": "Voting.getWinnerName", "offset": [815, 844], "op": "SWAP1", "path": "0"}, "877": {"fn": "Voting.getWinnerName", "offset": [815, 844], "op": "PUSH1", "path": "0", "value": "0x20"}, "879": {"fn": "Voting.getWinnerName", "offset": [815, 844], "op": "ADD", "path": "0"}, "880": {"fn": "Voting.getWinnerName", "offset": [815, 844], "op": "DUP1", "path": "0"}, "881": {"fn": "Voting.getWinnerName", "offset": [815, 844], "op": "DUP4", "path": "0"}, "882": {"fn": "Voting.getWinnerName", "offset": [815, 844], "op": "GT", "path": "0"}, "883": {"fn": "Voting.getWinnerName", "offset": [815, 844], "op": "PUSH2", "path": "0", "value": "0x363"}, "886": {"fn": "Voting.getWinnerName", "offset": [815, 844], "op": "JUMPI", "path": "0"}, "887": {"fn": "Voting.getWinnerName", "offset": [815, 844], "op": "DUP3", "path": "0"}, "888": {"fn": "Voting.getWinnerName", "offset": [815, 844], "op": "SWAP1", "path": "0"}, "889": {"fn": "Voting.getWinnerName", "offset": [815, 844], "op": "SUB", "path": "0"}, "890": {"fn": "Voting.getWinnerName", "offset": [815, 844], "op": "PUSH1", "path": "0", "value": "0x1F"}, "892": {"fn": "Voting.getWinnerName", "offset": [815, 844], "op": "AND", "path": "0"}, "893": {"fn": "Voting.getWinnerName", "offset": [815, 844], "op": "DUP3", "path": "0"}, "894": {"fn": "Voting.getWinnerName", "offset": [815, 844], "op": "ADD", "path": "0"}, "895": {"fn": "Voting.getWinnerName", "offset": [815, 844], "op": "SWAP2", "path": "0"}, "896": {"fn": "Voting.getWinnerName", "offset": [815, 844], "op": "JUMPDEST", "path": "0"}, "897": {"fn": "Voting.getWinnerName", "offset": [815, 844], "op": "POP", "path": "0"}, "898": {"fn": "Voting.getWinnerName", "offset": [815, 844], "op": "POP", "path": "0"}, "899": {"fn": "Voting.getWinnerName", "offset": [815, 844], "op": "POP", "path": "0"}, "900": {"fn": "Voting.getWinnerName", "offset": [815, 844], "op": "POP", "path": "0"}, "901": {"fn": "Voting.getWinnerName", "offset": [815, 844], "op": "POP", "path": "0"}, "902": {"fn": "Voting.getWinnerName", "offset": [815, 844], "op": "SWAP1", "path": "0"}, "903": {"fn": "Voting.getWinnerName", "offset": [815, 844], "op": "DUP1", "path": "0"}, "904": {"fn": "Voting.getWinnerName", "offset": [815, 844], "op": "PUSH1", "path": "0", "value": "0x1"}, "906": {"fn": "Voting.getWinnerName", "offset": [815, 844], "op": "ADD", "path": "0"}, "907": {"fn": "Voting.getWinnerName", "offset": [815, 844], "op": "SLOAD", "path": "0"}, "908": {"fn": "Voting.getWinnerName", "offset": [815, 844], "op": "SWAP1", "path": "0"}, "909": {"fn": "Voting.getWinnerName", "offset": [815, 844], "op": "POP", "path": "0"}, "910": {"fn": "Voting.getWinnerName", "offset": [815, 844], "op": "DUP3", "path": "0"}, "911": {"fn": "Voting.getWinnerName", "jump": "o", "offset": [815, 844], "op": "JUMP", "path": "0"}, "912": {"fn": "Voting.winningCandidate", "offset": [1556, 1927], "op": "JUMPDEST", "path": "0"}, "913": {"fn": "Voting.winningCandidate", "offset": [1617, 1639], "op": "PUSH1", "path": "0", "value": "0x0"}, "915": {"fn": "Voting.winningCandidate", "offset": [1617, 1639], "op": "DUP1", "path": "0"}, "916": {"fn": "Voting.winningCandidate", "offset": [1617, 1639], "op": "DUP1", "path": "0"}, "917": {"fn": "Voting.winningCandidate", "offset": [1690, 1921], "op": "JUMPDEST", "path": "0"}, "918": {"fn": "Voting.winningCandidate", "offset": [1711, 1721], "op": "PUSH1", "path": "0", "value": "0x3"}, "920": {"fn": "Voting.winningCandidate", "offset": [1711, 1728], "op": "SLOAD", "path": "0"}, "921": {"fn": "Voting.winningCandidate", "offset": [1707, 1728], "op": "DUP2", "path": "0"}, "922": {"fn": "Voting.winningCandidate", "offset": [1707, 1728], "op": "LT", "path": "0"}, "923": {"fn": "Voting.winningCandidate", "offset": [1690, 1921], "op": "ISZERO", "path": "0"}, "924": {"fn": "Voting.winningCandidate", "offset": [1690, 1921], "op": "PUSH2", "path": "0", "value": "0x408"}, "927": {"fn": "Voting.winningCandidate", "offset": [1690, 1921], "op": "JUMPI", "path": "0"}, "928": {"fn": "Voting.winningCandidate", "offset": [1779, 1795], "op": "DUP2", "path": "0"}, "929": {"fn": "Voting.winningCandidate", "offset": [1753, 1763], "op": "PUSH1", "path": "0", "value": "0x3"}, "931": {"fn": "Voting.winningCandidate", "offset": [1764, 1765], "op": "DUP3", "path": "0"}, "932": {"fn": "Voting.winningCandidate", "offset": [1753, 1766], "op": "DUP2", "path": "0"}, "933": {"fn": "Voting.winningCandidate", "offset": [1753, 1766], "op": "SLOAD", "path": "0"}, "934": {"fn": "Voting.winningCandidate", "offset": [1753, 1766], "op": "DUP2", "path": "0"}, "935": {"fn": "Voting.winningCandidate", "offset": [1753, 1766], "op": "LT", "path": "0"}, "936": {"fn": "Voting.winningCandidate", "offset": [1753, 1766], "op": "PUSH2", "path": "0", "value": "0x3B3"}, "939": {"fn": "Voting.winningCandidate", "offset": [1753, 1766], "op": "JUMPI", "path": "0"}, "940": {"fn": "Voting.winningCandidate", "offset": [1753, 1766], "op": "PUSH2", "path": "0", "value": "0x3B3"}, "943": {"fn": "Voting.winningCandidate", "offset": [1753, 1766], "op": "PUSH2", "path": "0", "value": "0x644"}, "946": {"fn": "Voting.winningCandidate", "jump": "i", "offset": [1753, 1766], "op": "JUMP", "path": "0"}, "947": {"fn": "Voting.winningCandidate", "offset": [1753, 1766], "op": "JUMPDEST", "path": "0"}, "948": {"fn": "Voting.winningCandidate", "offset": [1753, 1766], "op": "SWAP1", "path": "0"}, "949": {"fn": "Voting.winningCandidate", "offset": [1753, 1766], "op": "PUSH1", "path": "0", "value": "0x0"}, "951": {"fn": "Voting.winningCandidate", "offset": [1753, 1766], "op": "MSTORE", "path": "0"}, "952": {"fn": "Voting.winningCandidate", "offset": [1753, 1766], "op": "PUSH1", "path": "0", "value": "0x20"}, "954": {"fn": "Voting.winningCandidate", "offset": [1753, 1766], "op": "PUSH1", "path": "0", "value": "0x0"}, "956": {"fn": "Voting.winningCandidate", "offset": [1753, 1766], "op": "KECCAK256", "path": "0"}, "957": {"fn": "Voting.winningCandidate", "offset": [1753, 1766], "op": "SWAP1", "path": "0"}, "958": {"fn": "Voting.winningCandidate", "offset": [1753, 1766], "op": "PUSH1", "path": "0", "value": "0x2"}, "960": {"fn": "Voting.winningCandidate", "offset": [1753, 1766], "op": "MUL", "path": "0"}, "961": {"fn": "Voting.winningCandidate", "offset": [1753, 1766], "op": "ADD", "path": "0"}, "962": {"fn": "Voting.winningCandidate", "offset": [1753, 1776], "op": "PUSH1", "path": "0", "value": "0x1"}, "964": {"fn": "Voting.winningCandidate", "offset": [1753, 1776], "op": "ADD", "path": "0"}, "965": {"fn": "Voting.winningCandidate", "offset": [1753, 1776], "op": "SLOAD", "path": "0"}, "966": {"branch": 12, "fn": "Voting.winningCandidate", "offset": [1753, 1795], "op": "GT", "path": "0"}, "967": {"fn": "Voting.winningCandidate", "offset": [1749, 1911], "op": "ISZERO", "path": "0"}, "968": {"fn": "Voting.winningCandidate", "offset": [1749, 1911], "op": "PUSH2", "path": "0", "value": "0x3F6"}, "971": {"branch": 12, "fn": "Voting.winningCandidate", "offset": [1749, 1911], "op": "JUMPI", "path": "0"}, "972": {"fn": "Voting.winningCandidate", "offset": [1834, 1844], "op": "PUSH1", "path": "0", "statement": 7, "value": "0x3"}, "974": {"fn": "Voting.winningCandidate", "offset": [1845, 1846], "op": "DUP2", "path": "0"}, "975": {"fn": "Voting.winningCandidate", "offset": [1834, 1847], "op": "DUP2", "path": "0"}, "976": {"fn": "Voting.winningCandidate", "offset": [1834, 1847], "op": "SLOAD", "path": "0"}, "977": {"fn": "Voting.winningCandidate", "offset": [1834, 1847], "op": "DUP2", "path": "0"}, "978": {"fn": "Voting.winningCandidate", "offset": [1834, 1847], "op": "LT", "path": "0"}, "979": {"fn": "Voting.winningCandidate", "offset": [1834, 1847], "op": "PUSH2", "path": "0", "value": "0x3DE"}, "982": {"fn": "Voting.winningCandidate", "offset": [1834, 1847], "op": "JUMPI", "path": "0"}, "983": {"fn": "Voting.winningCandidate", "offset": [1834, 1847], "op": "PUSH2", "path": "0", "value": "0x3DE"}, "986": {"fn": "Voting.winningCandidate", "offset": [1834, 1847], "op": "PUSH2", "path": "0", "value": "0x644"}, "989": {"fn": "Voting.winningCandidate", "jump": "i", "offset": [1834, 1847], "op": "JUMP", "path": "0"}, "990": {"fn": "Voting.winningCandidate", "offset": [1834, 1847], "op": "JUMPDEST", "path": "0"}, "991": {"fn": "Voting.winningCandidate", "offset": [1834, 1847], "op": "SWAP1", "path": "0"}, "992": {"fn": "Voting.winningCandidate", "offset": [1834, 1847], "op": "PUSH1", "path": "0", "value": "0x0"}, "994": {"fn": "Voting.winningCandidate", "offset": [1834, 1847], "op": "MSTORE", "path": "0"}, "995": {"fn": "Voting.winningCandidate", "offset": [1834, 1847], "op": "PUSH1", "path": "0", "value": "0x20"}, "997": {"fn": "Voting.winningCandidate", "offset": [1834, 1847], "op": "PUSH1", "path": "0", "value": "0x0"}, "999": {"fn": "Voting.winningCandidate", "offset": [1834, 1847], "op": "KECCAK256", "path": "0"}, "1000": {"fn": "Voting.winningCandidate", "offset": [1834, 1847], "op": "SWAP1", "path": "0"}, "1001": {"fn": "Voting.winningCandidate", "offset": [1834, 1847], "op": "PUSH1", "path": "0", "value": "0x2"}, "1003": {"fn": "Voting.winningCandidate", "offset": [1834, 1847], "op": "MUL", "path": "0"}, "1004": {"fn": "Voting.winningCandidate", "offset": [1834, 1847], "op": "ADD", "path": "0"}, "1005": {"fn": "Voting.winningCandidate", "offset": [1834, 1857], "op": "PUSH1", "path": "0", "value": "0x1"}, "1007": {"fn": "Voting.winningCandidate", "offset": [1834, 1857], "op": "ADD", "path": "0"}, "1008": {"fn": "Voting.winningCandidate", "offset": [1834, 1857], "op": "SLOAD", "path": "0"}, "1009": {"fn": "Voting.winningCandidate", "offset": [1815, 1857], "op": "SWAP2", "path": "0"}, "1010": {"fn": "Voting.winningCandidate", "offset": [1815, 1857], "op": "POP", "path": "0"}, "1011": {"fn": "Voting.winningCandidate", "offset": [1895, 1896], "op": "DUP1", "path": "0", "statement": 8}, "1012": {"fn": "Voting.winningCandidate", "offset": [1875, 1896], "op": "SWAP3", "path": "0"}, "1013": {"fn": "Voting.winningCandidate", "offset": [1875, 1896], "op": "POP", "path": "0"}, "1014": {"fn": "Voting.winningCandidate", "offset": [1749, 1911], "op": "JUMPDEST", "path": "0"}, "1015": {"fn": "Voting.winningCandidate", "offset": [1730, 1733], "op": "DUP1", "path": "0", "statement": 9}, "1016": {"fn": "Voting.winningCandidate", "offset": [1730, 1733], "op": "PUSH2", "path": "0", "value": "0x400"}, "1019": {"fn": "Voting.winningCandidate", "offset": [1730, 1733], "op": "DUP2", "path": "0"}, "1020": {"fn": "Voting.winningCandidate", "offset": [1730, 1733], "op": "PUSH2", "path": "0", "value": "0x6C3"}, "1023": {"fn": "Voting.winningCandidate", "jump": "i", "offset": [1730, 1733], "op": "JUMP", "path": "0"}, "1024": {"fn": "Voting.winningCandidate", "offset": [1730, 1733], "op": "JUMPDEST", "path": "0"}, "1025": {"fn": "Voting.winningCandidate", "offset": [1730, 1733], "op": "SWAP2", "path": "0"}, "1026": {"fn": "Voting.winningCandidate", "offset": [1730, 1733], "op": "POP", "path": "0"}, "1027": {"fn": "Voting.winningCandidate", "offset": [1730, 1733], "op": "POP", "path": "0"}, "1028": {"fn": "Voting.winningCandidate", "offset": [1690, 1921], "op": "PUSH2", "path": "0", "value": "0x395"}, "1031": {"fn": "Voting.winningCandidate", "offset": [1690, 1921], "op": "JUMP", "path": "0"}, "1032": {"fn": "Voting.winningCandidate", "offset": [1690, 1921], "op": "JUMPDEST", "path": "0"}, "1033": {"fn": "Voting.winningCandidate", "offset": [1690, 1921], "op": "POP", "path": "0"}, "1034": {"fn": "Voting.winningCandidate", "offset": [1645, 1927], "op": "POP", "path": "0"}, "1035": {"fn": "Voting.winningCandidate", "offset": [1556, 1927], "op": "SWAP1", "path": "0"}, "1036": {"fn": "Voting.winningCandidate", "jump": "o", "offset": [1556, 1927], "op": "JUMP", "path": "0"}, "1037": {"offset": [321, 345], "op": "JUMPDEST", "path": "0"}, "1038": {"fn": "Voting.winningCandidate", "offset": [321, 345], "op": "PUSH1", "path": "0", "value": "0x0"}, "1040": {"fn": "Voting.winningCandidate", "offset": [321, 345], "op": "DUP1", "path": "0"}, "1041": {"fn": "Voting.winningCandidate", "offset": [321, 345], "op": "SLOAD", "path": "0"}, "1042": {"fn": "Voting.winningCandidate", "offset": [321, 345], "op": "PUSH2", "path": "0", "value": "0x41A"}, "1045": {"fn": "Voting.winningCandidate", "offset": [321, 345], "op": "SWAP1", "path": "0"}, "1046": {"fn": "Voting.winningCandidate", "offset": [321, 345], "op": "PUSH2", "path": "0", "value": "0x688"}, "1049": {"fn": "Voting.winningCandidate", "jump": "i", "offset": [321, 345], "op": "JUMP", "path": "0"}, "1050": {"fn": "Voting.winningCandidate", "offset": [321, 345], "op": "JUMPDEST", "path": "0"}, "1051": {"fn": "Voting.winningCandidate", "offset": [321, 345], "op": "DUP1", "path": "0"}, "1052": {"fn": "Voting.winningCandidate", "offset": [321, 345], "op": "PUSH1", "path": "0", "value": "0x1F"}, "1054": {"fn": "Voting.winningCandidate", "offset": [321, 345], "op": "ADD", "path": "0"}, "1055": {"fn": "Voting.winningCandidate", "offset": [321, 345], "op": "PUSH1", "path": "0", "value": "0x20"}, "1057": {"fn": "Voting.winningCandidate", "offset": [321, 345], "op": "DUP1", "path": "0"}, "1058": {"fn": "Voting.winningCandidate", "offset": [321, 345], "op": "SWAP2", "path": "0"}, "1059": {"fn": "Voting.winningCandidate", "offset": [321, 345], "op": "DIV", "path": "0"}, "1060": {"fn": "Voting.winningCandidate", "offset": [321, 345], "op": "MUL", "path": "0"}, "1061": {"fn": "Voting.winningCandidate", "offset": [321, 345], "op": "PUSH1", "path": "0", "value": "0x20"}, "1063": {"fn": "Voting.winningCandidate", "offset": [321, 345], "op": "ADD", "path": "0"}, "1064": {"fn": "Voting.winningCandidate", "offset": [321, 345], "op": "PUSH1", "path": "0", "value": "0x40"}, "1066": {"fn": "Voting.winningCandidate", "offset": [321, 345], "op": "MLOAD", "path": "0"}, "1067": {"fn": "Voting.winningCandidate", "offset": [321, 345], "op": "SWAP1", "path": "0"}, "1068": {"fn": "Voting.winningCandidate", "offset": [321, 345], "op": "DUP2", "path": "0"}, "1069": {"fn": "Voting.winningCandidate", "offset": [321, 345], "op": "ADD", "path": "0"}, "1070": {"fn": "Voting.winningCandidate", "offset": [321, 345], "op": "PUSH1", "path": "0", "value": "0x40"}, "1072": {"fn": "Voting.winningCandidate", "offset": [321, 345], "op": "MSTORE", "path": "0"}, "1073": {"fn": "Voting.winningCandidate", "offset": [321, 345], "op": "DUP1", "path": "0"}, "1074": {"fn": "Voting.winningCandidate", "offset": [321, 345], "op": "SWAP3", "path": "0"}, "1075": {"fn": "Voting.winningCandidate", "offset": [321, 345], "op": "SWAP2", "path": "0"}, "1076": {"fn": "Voting.winningCandidate", "offset": [321, 345], "op": "SWAP1", "path": "0"}, "1077": {"fn": "Voting.winningCandidate", "offset": [321, 345], "op": "DUP2", "path": "0"}, "1078": {"fn": "Voting.winningCandidate", "offset": [321, 345], "op": "DUP2", "path": "0"}, "1079": {"fn": "Voting.winningCandidate", "offset": [321, 345], "op": "MSTORE", "path": "0"}, "1080": {"fn": "Voting.winningCandidate", "offset": [321, 345], "op": "PUSH1", "path": "0", "value": "0x20"}, "1082": {"fn": "Voting.winningCandidate", "offset": [321, 345], "op": "ADD", "path": "0"}, "1083": {"fn": "Voting.winningCandidate", "offset": [321, 345], "op": "DUP3", "path": "0"}, "1084": {"fn": "Voting.winningCandidate", "offset": [321, 345], "op": "DUP1", "path": "0"}, "1085": {"fn": "Voting.winningCandidate", "offset": [321, 345], "op": "SLOAD", "path": "0"}, "1086": {"fn": "Voting.winningCandidate", "offset": [321, 345], "op": "PUSH2", "path": "0", "value": "0x446"}, "1089": {"fn": "Voting.winningCandidate", "offset": [321, 345], "op": "SWAP1", "path": "0"}, "1090": {"fn": "Voting.winningCandidate", "offset": [321, 345], "op": "PUSH2", "path": "0", "value": "0x688"}, "1093": {"fn": "Voting.winningCandidate", "jump": "i", "offset": [321, 345], "op": "JUMP", "path": "0"}, "1094": {"fn": "Voting.winningCandidate", "offset": [321, 345], "op": "JUMPDEST", "path": "0"}, "1095": {"fn": "Voting.winningCandidate", "offset": [321, 345], "op": "DUP1", "path": "0"}, "1096": {"fn": "Voting.winningCandidate", "offset": [321, 345], "op": "ISZERO", "path": "0"}, "1097": {"fn": "Voting.winningCandidate", "offset": [321, 345], "op": "PUSH2", "path": "0", "value": "0x493"}, "1100": {"fn": "Voting.winningCandidate", "offset": [321, 345], "op": "JUMPI", "path": "0"}, "1101": {"fn": "Voting.winningCandidate", "offset": [321, 345], "op": "DUP1", "path": "0"}, "1102": {"fn": "Voting.winningCandidate", "offset": [321, 345], "op": "PUSH1", "path": "0", "value": "0x1F"}, "1104": {"fn": "Voting.winningCandidate", "offset": [321, 345], "op": "LT", "path": "0"}, "1105": {"fn": "Voting.winningCandidate", "offset": [321, 345], "op": "PUSH2", "path": "0", "value": "0x468"}, "1108": {"fn": "Voting.winningCandidate", "offset": [321, 345], "op": "JUMPI", "path": "0"}, "1109": {"fn": "Voting.winningCandidate", "offset": [321, 345], "op": "PUSH2", "path": "0", "value": "0x100"}, "1112": {"fn": "Voting.winningCandidate", "offset": [321, 345], "op": "DUP1", "path": "0"}, "1113": {"fn": "Voting.winningCandidate", "offset": [321, 345], "op": "DUP4", "path": "0"}, "1114": {"fn": "Voting.winningCandidate", "offset": [321, 345], "op": "SLOAD", "path": "0"}, "1115": {"fn": "Voting.winningCandidate", "offset": [321, 345], "op": "DIV", "path": "0"}, "1116": {"fn": "Voting.winningCandidate", "offset": [321, 345], "op": "MUL", "path": "0"}, "1117": {"fn": "Voting.winningCandidate", "offset": [321, 345], "op": "DUP4", "path": "0"}, "1118": {"fn": "Voting.winningCandidate", "offset": [321, 345], "op": "MSTORE", "path": "0"}, "1119": {"fn": "Voting.winningCandidate", "offset": [321, 345], "op": "SWAP2", "path": "0"}, "1120": {"fn": "Voting.winningCandidate", "offset": [321, 345], "op": "PUSH1", "path": "0", "value": "0x20"}, "1122": {"fn": "Voting.winningCandidate", "offset": [321, 345], "op": "ADD", "path": "0"}, "1123": {"fn": "Voting.winningCandidate", "offset": [321, 345], "op": "SWAP2", "path": "0"}, "1124": {"fn": "Voting.winningCandidate", "offset": [321, 345], "op": "PUSH2", "path": "0", "value": "0x493"}, "1127": {"fn": "Voting.winningCandidate", "offset": [321, 345], "op": "JUMP", "path": "0"}, "1128": {"fn": "Voting.winningCandidate", "offset": [321, 345], "op": "JUMPDEST", "path": "0"}, "1129": {"fn": "Voting.winningCandidate", "offset": [321, 345], "op": "DUP3", "path": "0"}, "1130": {"fn": "Voting.winningCandidate", "offset": [321, 345], "op": "ADD", "path": "0"}, "1131": {"fn": "Voting.winningCandidate", "offset": [321, 345], "op": "SWAP2", "path": "0"}, "1132": {"fn": "Voting.winningCandidate", "offset": [321, 345], "op": "SWAP1", "path": "0"}, "1133": {"fn": "Voting.winningCandidate", "offset": [321, 345], "op": "PUSH1", "path": "0", "value": "0x0"}, "1135": {"fn": "Voting.winningCandidate", "offset": [321, 345], "op": "MSTORE", "path": "0"}, "1136": {"fn": "Voting.winningCandidate", "offset": [321, 345], "op": "PUSH1", "path": "0", "value": "0x20"}, "1138": {"fn": "Voting.winningCandidate", "offset": [321, 345], "op": "PUSH1", "path": "0", "value": "0x0"}, "1140": {"fn": "Voting.winningCandidate", "offset": [321, 345], "op": "KECCAK256", "path": "0"}, "1141": {"fn": "Voting.winningCandidate", "offset": [321, 345], "op": "SWAP1", "path": "0"}, "1142": {"fn": "Voting.winningCandidate", "offset": [321, 345], "op": "JUMPDEST", "path": "0"}, "1143": {"fn": "Voting.winningCandidate", "offset": [321, 345], "op": "DUP2", "path": "0"}, "1144": {"fn": "Voting.winningCandidate", "offset": [321, 345], "op": "SLOAD", "path": "0"}, "1145": {"fn": "Voting.winningCandidate", "offset": [321, 345], "op": "DUP2", "path": "0"}, "1146": {"fn": "Voting.winningCandidate", "offset": [321, 345], "op": "MSTORE", "path": "0"}, "1147": {"fn": "Voting.winningCandidate", "offset": [321, 345], "op": "SWAP1", "path": "0"}, "1148": {"fn": "Voting.winningCandidate", "offset": [321, 345], "op": "PUSH1", "path": "0", "value": "0x1"}, "1150": {"fn": "Voting.winningCandidate", "offset": [321, 345], "op": "ADD", "path": "0"}, "1151": {"fn": "Voting.winningCandidate", "offset": [321, 345], "op": "SWAP1", "path": "0"}, "1152": {"fn": "Voting.winningCandidate", "offset": [321, 345], "op": "PUSH1", "path": "0", "value": "0x20"}, "1154": {"fn": "Voting.winningCandidate", "offset": [321, 345], "op": "ADD", "path": "0"}, "1155": {"fn": "Voting.winningCandidate", "offset": [321, 345], "op": "DUP1", "path": "0"}, "1156": {"fn": "Voting.winningCandidate", "offset": [321, 345], "op": "DUP4", "path": "0"}, "1157": {"fn": "Voting.winningCandidate", "offset": [321, 345], "op": "GT", "path": "0"}, "1158": {"fn": "Voting.winningCandidate", "offset": [321, 345], "op": "PUSH2", "path": "0", "value": "0x476"}, "1161": {"fn": "Voting.winningCandidate", "offset": [321, 345], "op": "JUMPI", "path": "0"}, "1162": {"fn": "Voting.winningCandidate", "offset": [321, 345], "op": "DUP3", "path": "0"}, "1163": {"fn": "Voting.winningCandidate", "offset": [321, 345], "op": "SWAP1", "path": "0"}, "1164": {"fn": "Voting.winningCandidate", "offset": [321, 345], "op": "SUB", "path": "0"}, "1165": {"fn": "Voting.winningCandidate", "offset": [321, 345], "op": "PUSH1", "path": "0", "value": "0x1F"}, "1167": {"fn": "Voting.winningCandidate", "offset": [321, 345], "op": "AND", "path": "0"}, "1168": {"fn": "Voting.winningCandidate", "offset": [321, 345], "op": "DUP3", "path": "0"}, "1169": {"fn": "Voting.winningCandidate", "offset": [321, 345], "op": "ADD", "path": "0"}, "1170": {"fn": "Voting.winningCandidate", "offset": [321, 345], "op": "SWAP2", "path": "0"}, "1171": {"fn": "Voting.winningCandidate", "offset": [321, 345], "op": "JUMPDEST", "path": "0"}, "1172": {"fn": "Voting.winningCandidate", "offset": [321, 345], "op": "POP", "path": "0"}, "1173": {"fn": "Voting.winningCandidate", "offset": [321, 345], "op": "POP", "path": "0"}, "1174": {"fn": "Voting.winningCandidate", "offset": [321, 345], "op": "POP", "path": "0"}, "1175": {"fn": "Voting.winningCandidate", "offset": [321, 345], "op": "POP", "path": "0"}, "1176": {"fn": "Voting.winningCandidate", "offset": [321, 345], "op": "POP", "path": "0"}, "1177": {"fn": "Voting.winningCandidate", "offset": [321, 345], "op": "DUP2", "path": "0"}, "1178": {"fn": "Voting.winningCandidate", "jump": "o", "offset": [321, 345], "op": "JUMP", "path": "0"}, "1179": {"op": "JUMPDEST"}, "1180": {"op": "DUP3"}, "1181": {"op": "DUP1"}, "1182": {"op": "SLOAD"}, "1183": {"op": "PUSH2", "value": "0x4A7"}, "1186": {"op": "SWAP1"}, "1187": {"op": "PUSH2", "value": "0x688"}, "1190": {"jump": "i", "op": "JUMP"}, "1191": {"op": "JUMPDEST"}, "1192": {"op": "SWAP1"}, "1193": {"op": "PUSH1", "value": "0x0"}, "1195": {"op": "MSTORE"}, "1196": {"op": "PUSH1", "value": "0x20"}, "1198": {"op": "PUSH1", "value": "0x0"}, "1200": {"op": "KECCAK256"}, "1201": {"op": "SWAP1"}, "1202": {"op": "PUSH1", "value": "0x1F"}, "1204": {"op": "ADD"}, "1205": {"op": "PUSH1", "value": "0x20"}, "1207": {"op": "SWAP1"}, "1208": {"op": "DIV"}, "1209": {"op": "DUP2"}, "1210": {"op": "ADD"}, "1211": {"op": "SWAP3"}, "1212": {"op": "DUP3"}, "1213": {"op": "PUSH2", "value": "0x4C9"}, "1216": {"op": "JUMPI"}, "1217": {"op": "PUSH1", "value": "0x0"}, "1219": {"op": "DUP6"}, "1220": {"op": "SSTORE"}, "1221": {"op": "PUSH2", "value": "0x516"}, "1224": {"op": "JUMP"}, "1225": {"op": "JUMPDEST"}, "1226": {"op": "DUP3"}, "1227": {"op": "PUSH1", "value": "0x1F"}, "1229": {"op": "LT"}, "1230": {"op": "PUSH2", "value": "0x4DA"}, "1233": {"op": "JUMPI"}, "1234": {"op": "DUP1"}, "1235": {"op": "SLOAD"}, "1236": {"op": "DUP6"}, "1237": {"op": "SSTORE"}, "1238": {"op": "PUSH2", "value": "0x516"}, "1241": {"op": "JUMP"}, "1242": {"op": "JUMPDEST"}, "1243": {"op": "DUP3"}, "1244": {"op": "DUP1"}, "1245": {"op": "ADD"}, "1246": {"op": "PUSH1", "value": "0x1"}, "1248": {"op": "ADD"}, "1249": {"op": "DUP6"}, "1250": {"op": "SSTORE"}, "1251": {"op": "DUP3"}, "1252": {"op": "ISZERO"}, "1253": {"op": "PUSH2", "value": "0x516"}, "1256": {"op": "JUMPI"}, "1257": {"op": "PUSH1", "value": "0x0"}, "1259": {"op": "MSTORE"}, "1260": {"op": "PUSH1", "value": "0x20"}, "1262": {"op": "PUSH1", "value": "0x0"}, "1264": {"op": "KECCAK256"}, "1265": {"op": "SWAP2"}, "1266": {"op": "PUSH1", "value": "0x1F"}, "1268": {"op": "ADD"}, "1269": {"op": "PUSH1", "value": "0x20"}, "1271": {"op": "SWAP1"}, "1272": {"op": "DIV"}, "1273": {"op": "DUP3"}, "1274": {"op": "ADD"}, "1275": {"op": "JUMPDEST"}, "1276": {"op": "DUP3"}, "1277": {"op": "DUP2"}, "1278": {"op": "GT"}, "1279": {"op": "ISZERO"}, "1280": {"op": "PUSH2", "value": "0x516"}, "1283": {"op": "JUMPI"}, "1284": {"op": "DUP3"}, "1285": {"op": "SLOAD"}, "1286": {"op": "DUP3"}, "1287": {"op": "SSTORE"}, "1288": {"op": "SWAP2"}, "1289": {"op": "PUSH1", "value": "0x1"}, "1291": {"op": "ADD"}, "1292": {"op": "SWAP2"}, "1293": {"op": "SWAP1"}, "1294": {"op": "PUSH1", "value": "0x1"}, "1296": {"op": "ADD"}, "1297": {"op": "SWAP1"}, "1298": {"op": "PUSH2", "value": "0x4FB"}, "1301": {"op": "JUMP"}, "1302": {"op": "JUMPDEST"}, "1303": {"op": "POP"}, "1304": {"op": "PUSH2", "value": "0x522"}, "1307": {"op": "SWAP3"}, "1308": {"op": "SWAP2"}, "1309": {"op": "POP"}, "1310": {"op": "PUSH2", "value": "0x526"}, "1313": {"jump": "i", "op": "JUMP"}, "1314": {"op": "JUMPDEST"}, "1315": {"op": "POP"}, "1316": {"op": "SWAP1"}, "1317": {"jump": "o", "op": "JUMP"}, "1318": {"op": "JUMPDEST"}, "1319": {"op": "JUMPDEST"}, "1320": {"op": "DUP1"}, "1321": {"op": "DUP3"}, "1322": {"op": "GT"}, "1323": {"op": "ISZERO"}, "1324": {"op": "PUSH2", "value": "0x522"}, "1327": {"op": "JUMPI"}, "1328": {"op": "PUSH1", "value": "0x0"}, "1330": {"op": "DUP2"}, "1331": {"op": "SSTORE"}, "1332": {"op": "PUSH1", "value": "0x1"}, "1334": {"op": "ADD"}, "1335": {"op": "PUSH2", "value": "0x527"}, "1338": {"op": "JUMP"}, "1339": {"op": "JUMPDEST"}, "1340": {"op": "PUSH1", "value": "0x0"}, "1342": {"op": "PUSH1", "value": "0x20"}, "1344": {"op": "DUP3"}, "1345": {"op": "DUP5"}, "1346": {"op": "SUB"}, "1347": {"op": "SLT"}, "1348": {"op": "ISZERO"}, "1349": {"op": "PUSH2", "value": "0x54D"}, "1352": {"op": "JUMPI"}, "1353": {"op": "PUSH1", "value": "0x0"}, "1355": {"op": "DUP1"}, "1356": {"op": "REVERT"}, "1357": {"op": "JUMPDEST"}, "1358": {"op": "POP"}, "1359": {"op": "CALLDATALOAD"}, "1360": {"op": "SWAP2"}, "1361": {"op": "SWAP1"}, "1362": {"op": "POP"}, "1363": {"jump": "o", "op": "JUMP"}, "1364": {"op": "JUMPDEST"}, "1365": {"op": "PUSH1", "value": "0x0"}, "1367": {"op": "DUP2"}, "1368": {"op": "MLOAD"}, "1369": {"op": "DUP1"}, "1370": {"op": "DUP5"}, "1371": {"op": "MSTORE"}, "1372": {"op": "PUSH1", "value": "0x0"}, "1374": {"op": "JUMPDEST"}, "1375": {"op": "DUP2"}, "1376": {"op": "DUP2"}, "1377": {"op": "LT"}, "1378": {"op": "ISZERO"}, "1379": {"op": "PUSH2", "value": "0x57A"}, "1382": {"op": "JUMPI"}, "1383": {"op": "PUSH1", "value": "0x20"}, "1385": {"op": "DUP2"}, "1386": {"op": "DUP6"}, "1387": {"op": "ADD"}, "1388": {"op": "DUP2"}, "1389": {"op": "ADD"}, "1390": {"op": "MLOAD"}, "1391": {"op": "DUP7"}, "1392": {"op": "DUP4"}, "1393": {"op": "ADD"}, "1394": {"op": "DUP3"}, "1395": {"op": "ADD"}, "1396": {"op": "MSTORE"}, "1397": {"op": "ADD"}, "1398": {"op": "PUSH2", "value": "0x55E"}, "1401": {"op": "JUMP"}, "1402": {"op": "JUMPDEST"}, "1403": {"op": "DUP2"}, "1404": {"op": "DUP2"}, "1405": {"op": "GT"}, "1406": {"op": "ISZERO"}, "1407": {"op": "PUSH2", "value": "0x58C"}, "1410": {"op": "JUMPI"}, "1411": {"op": "PUSH1", "value": "0x0"}, "1413": {"op": "PUSH1", "value": "0x20"}, "1415": {"op": "DUP4"}, "1416": {"op": "DUP8"}, "1417": {"op": "ADD"}, "1418": {"op": "ADD"}, "1419": {"op": "MSTORE"}, "1420": {"op": "JUMPDEST"}, "1421": {"op": "POP"}, "1422": {"op": "PUSH1", "value": "0x1F"}, "1424": {"op": "ADD"}, "1425": {"op": "PUSH1", "value": "0x1F"}, "1427": {"op": "NOT"}, "1428": {"op": "AND"}, "1429": {"op": "SWAP3"}, "1430": {"op": "SWAP1"}, "1431": {"op": "SWAP3"}, "1432": {"op": "ADD"}, "1433": {"op": "PUSH1", "value": "0x20"}, "1435": {"op": "ADD"}, "1436": {"op": "SWAP3"}, "1437": {"op": "SWAP2"}, "1438": {"op": "POP"}, "1439": {"op": "POP"}, "1440": {"jump": "o", "op": "JUMP"}, "1441": {"op": "JUMPDEST"}, "1442": {"op": "PUSH1", "value": "0x40"}, "1444": {"op": "DUP2"}, "1445": {"op": "MSTORE"}, "1446": {"op": "PUSH1", "value": "0x0"}, "1448": {"op": "PUSH2", "value": "0x5B4"}, "1451": {"op": "PUSH1", "value": "0x40"}, "1453": {"op": "DUP4"}, "1454": {"op": "ADD"}, "1455": {"op": "DUP6"}, "1456": {"op": "PUSH2", "value": "0x554"}, "1459": {"jump": "i", "op": "JUMP"}, "1460": {"op": "JUMPDEST"}, "1461": {"op": "SWAP1"}, "1462": {"op": "POP"}, "1463": {"op": "DUP3"}, "1464": {"op": "PUSH1", "value": "0x20"}, "1466": {"op": "DUP4"}, "1467": {"op": "ADD"}, "1468": {"op": "MSTORE"}, "1469": {"op": "SWAP4"}, "1470": {"op": "SWAP3"}, "1471": {"op": "POP"}, "1472": {"op": "POP"}, "1473": {"op": "POP"}, "1474": {"jump": "o", "op": "JUMP"}, "1475": {"op": "JUMPDEST"}, "1476": {"op": "PUSH1", "value": "0x0"}, "1478": {"op": "PUSH1", "value": "0x20"}, "1480": {"op": "DUP3"}, "1481": {"op": "DUP5"}, "1482": {"op": "SUB"}, "1483": {"op": "SLT"}, "1484": {"op": "ISZERO"}, "1485": {"op": "PUSH2", "value": "0x5D5"}, "1488": {"op": "JUMPI"}, "1489": {"op": "PUSH1", "value": "0x0"}, "1491": {"op": "DUP1"}, "1492": {"op": "REVERT"}, "1493": {"op": "JUMPDEST"}, "1494": {"op": "DUP2"}, "1495": {"op": "CALLDATALOAD"}, "1496": {"op": "PUSH1", "value": "0x1"}, "1498": {"op": "PUSH1", "value": "0x1"}, "1500": {"op": "PUSH1", "value": "0xA0"}, "1502": {"op": "SHL"}, "1503": {"op": "SUB"}, "1504": {"op": "DUP2"}, "1505": {"op": "AND"}, "1506": {"op": "DUP2"}, "1507": {"op": "EQ"}, "1508": {"op": "PUSH2", "value": "0x5EC"}, "1511": {"op": "JUMPI"}, "1512": {"op": "PUSH1", "value": "0x0"}, "1514": {"op": "DUP1"}, "1515": {"op": "REVERT"}, "1516": {"op": "JUMPDEST"}, "1517": {"op": "SWAP4"}, "1518": {"op": "SWAP3"}, "1519": {"op": "POP"}, "1520": {"op": "POP"}, "1521": {"op": "POP"}, "1522": {"jump": "o", "op": "JUMP"}, "1523": {"op": "JUMPDEST"}, "1524": {"op": "PUSH4", "value": "0x4E487B71"}, "1529": {"op": "PUSH1", "value": "0xE0"}, "1531": {"op": "SHL"}, "1532": {"op": "PUSH1", "value": "0x0"}, "1534": {"op": "MSTORE"}, "1535": {"op": "PUSH1", "value": "0x21"}, "1537": {"op": "PUSH1", "value": "0x4"}, "1539": {"op": "MSTORE"}, "1540": {"op": "PUSH1", "value": "0x24"}, "1542": {"op": "PUSH1", "value": "0x0"}, "1544": {"op": "REVERT"}, "1545": {"op": "JUMPDEST"}, "1546": {"op": "PUSH1", "value": "0x20"}, "1548": {"op": "DUP2"}, "1549": {"op": "ADD"}, "1550": {"op": "PUSH1", "value": "0x2"}, "1552": {"op": "DUP4"}, "1553": {"op": "LT"}, "1554": {"op": "PUSH2", "value": "0x62B"}, "1557": {"op": "JUMPI"}, "1558": {"op": "PUSH4", "value": "0x4E487B71"}, "1563": {"op": "PUSH1", "value": "0xE0"}, "1565": {"op": "SHL"}, "1566": {"op": "PUSH1", "value": "0x0"}, "1568": {"op": "MSTORE"}, "1569": {"op": "PUSH1", "value": "0x21"}, "1571": {"op": "PUSH1", "value": "0x4"}, "1573": {"op": "MSTORE"}, "1574": {"op": "PUSH1", "value": "0x24"}, "1576": {"op": "PUSH1", "value": "0x0"}, "1578": {"op": "REVERT"}, "1579": {"op": "JUMPDEST"}, "1580": {"op": "SWAP2"}, "1581": {"op": "SWAP1"}, "1582": {"op": "MSTORE"}, "1583": {"op": "SWAP1"}, "1584": {"jump": "o", "op": "JUMP"}, "1585": {"op": "JUMPDEST"}, "1586": {"op": "PUSH1", "value": "0x20"}, "1588": {"op": "DUP2"}, "1589": {"op": "MSTORE"}, "1590": {"op": "PUSH1", "value": "0x0"}, "1592": {"op": "PUSH2", "value": "0x5EC"}, "1595": {"op": "PUSH1", "value": "0x20"}, "1597": {"op": "DUP4"}, "1598": {"op": "ADD"}, "1599": {"op": "DUP5"}, "1600": {"op": "PUSH2", "value": "0x554"}, "1603": {"jump": "i", "op": "JUMP"}, "1604": {"op": "JUMPDEST"}, "1605": {"op": "PUSH4", "value": "0x4E487B71"}, "1610": {"op": "PUSH1", "value": "0xE0"}, "1612": {"op": "SHL"}, "1613": {"op": "PUSH1", "value": "0x0"}, "1615": {"op": "MSTORE"}, "1616": {"op": "PUSH1", "value": "0x32"}, "1618": {"op": "PUSH1", "value": "0x4"}, "1620": {"op": "MSTORE"}, "1621": {"op": "PUSH1", "value": "0x24"}, "1623": {"op": "PUSH1", "value": "0x0"}, "1625": {"op": "REVERT"}, "1626": {"op": "JUMPDEST"}, "1627": {"op": "PUSH4", "value": "0x4E487B71"}, "1632": {"op": "PUSH1", "value": "0xE0"}, "1634": {"op": "SHL"}, "1635": {"op": "PUSH1", "value": "0x0"}, "1637": {"op": "MSTORE"}, "1638": {"op": "PUSH1", "value": "0x11"}, "1640": {"op": "PUSH1", "value": "0x4"}, "1642": {"op": "MSTORE"}, "1643": {"op": "PUSH1", "value": "0x24"}, "1645": {"op": "PUSH1", "value": "0x0"}, "1647": {"op": "REVERT"}, "1648": {"op": "JUMPDEST"}, "1649": {"op": "PUSH1", "value": "0x0"}, "1651": {"op": "DUP3"}, "1652": {"op": "NOT"}, "1653": {"op": "DUP3"}, "1654": {"op": "GT"}, "1655": {"op": "ISZERO"}, "1656": {"op": "PUSH2", "value": "0x683"}, "1659": {"op": "JUMPI"}, "1660": {"op": "PUSH2", "value": "0x683"}, "1663": {"op": "PUSH2", "value": "0x65A"}, "1666": {"jump": "i", "op": "JUMP"}, "1667": {"op": "JUMPDEST"}, "1668": {"op": "POP"}, "1669": {"op": "ADD"}, "1670": {"op": "SWAP1"}, "1671": {"jump": "o", "op": "JUMP"}, "1672": {"op": "JUMPDEST"}, "1673": {"op": "PUSH1", "value": "0x1"}, "1675": {"op": "DUP2"}, "1676": {"op": "DUP2"}, "1677": {"op": "SHR"}, "1678": {"op": "SWAP1"}, "1679": {"op": "DUP3"}, "1680": {"op": "AND"}, "1681": {"op": "DUP1"}, "1682": {"op": "PUSH2", "value": "0x69C"}, "1685": {"op": "JUMPI"}, "1686": {"op": "PUSH1", "value": "0x7F"}, "1688": {"op": "DUP3"}, "1689": {"op": "AND"}, "1690": {"op": "SWAP2"}, "1691": {"op": "POP"}, "1692": {"op": "JUMPDEST"}, "1693": {"op": "PUSH1", "value": "0x20"}, "1695": {"op": "DUP3"}, "1696": {"op": "LT"}, "1697": {"op": "DUP2"}, "1698": {"op": "EQ"}, "1699": {"op": "ISZERO"}, "1700": {"op": "PUSH2", "value": "0x6BD"}, "1703": {"op": "JUMPI"}, "1704": {"op": "PUSH4", "value": "0x4E487B71"}, "1709": {"op": "PUSH1", "value": "0xE0"}, "1711": {"op": "SHL"}, "1712": {"op": "PUSH1", "value": "0x0"}, "1714": {"op": "MSTORE"}, "1715": {"op": "PUSH1", "value": "0x22"}, "1717": {"op": "PUSH1", "value": "0x4"}, "1719": {"op": "MSTORE"}, "1720": {"op": "PUSH1", "value": "0x24"}, "1722": {"op": "PUSH1", "value": "0x0"}, "1724": {"op": "REVERT"}, "1725": {"op": "JUMPDEST"}, "1726": {"op": "POP"}, "1727": {"op": "SWAP2"}, "1728": {"op": "SWAP1"}, "1729": {"op": "POP"}, "1730": {"jump": "o", "op": "JUMP"}, "1731": {"op": "JUMPDEST"}, "1732": {"op": "PUSH1", "value": "0x0"}, "1734": {"op": "PUSH1", "value": "0x0"}, "1736": {"op": "NOT"}, "1737": {"op": "DUP3"}, "1738": {"op": "EQ"}, "1739": {"op": "ISZERO"}, "1740": {"op": "PUSH2", "value": "0x6D7"}, "1743": {"op": "JUMPI"}, "1744": {"op": "PUSH2", "value": "0x6D7"}, "1747": {"op": "PUSH2", "value": "0x65A"}, "1750": {"jump": "i", "op": "JUMP"}, "1751": {"op": "JUMPDEST"}, "1752": {"op": "POP"}, "1753": {"op": "PUSH1", "value": "0x1"}, "1755": {"op": "ADD"}, "1756": {"op": "SWAP1"}, "1757": {"jump": "o", "op": "JUMP"}}, "sha1": "2d6e9d62b2b9a319ea53e4e56411422411b03126", "source": "// SPDX-License-Identifier: MIT\npragma solidity >=0.7.0 <0.9.0;\ncontract Voting {\n \n    // It will represent a single voter.\n    struct Voter {\n        bool voted;  // if true, that person already voted\n        uint vote;   // index of the voted Candidate \n    }\n       enum ELECTION_STATE{\n        OPEN,CLOSED\n    }\n    string public winnerName;\n    ELECTION_STATE public election_state;\n    // This is a type for a single Candidate.\n    struct Candidate {\n        string name;   // short name (up to 32 bytes)\n        uint voteCount; // number of accumulated votes\n    }\n\n    address public chairperson;\n\n    // This declares a state variable that\n    // stores a `Voter` struct for each possible address.\n    mapping(address => Voter) public voters;\n\n    // A dynamically-sized array of `Candidate` structs.\n    Candidate[] public candidates;\n\n    \n    constructor(string[] memory candidateNames) {\n        chairperson = msg.sender;\n        election_state=ELECTION_STATE.OPEN;\n        for (uint i = 0; i < candidateNames.length; i++) {\n            candidates.push(Candidate({\n                name: candidateNames[i],\n                voteCount: 0\n            }));\n        }\n    }\n\n    \n    /// Give your vote\n    function vote(uint candidate) public {\n        Voter storage sender = voters[msg.sender];\n        require(election_state==ELECTION_STATE.OPEN, \"voting closed.\");\n        require(!sender.voted, \"Already voted.\");\n        sender.voted = true;\n        sender.vote = candidate;\n\n      \n        candidates[candidate].voteCount += 1;\n    }\n\n \n    function winningCandidate() public view\n            returns (uint winningCandidate_)\n    {\n        uint winningVoteCount = 0;\n        for (uint p = 0; p < candidates.length; p++) {\n            if (candidates[p].voteCount > winningVoteCount) {\n                winningVoteCount = candidates[p].voteCount;\n                winningCandidate_ = p;\n            }\n        }\n    }\n\n    function getWinnerName() public \n    {\n        election_state=ELECTION_STATE.CLOSED;\n        winnerName = candidates[winningCandidate()].name;\n    }\n}", "sourceMap": "64:2019:0:-:0;;;856:325;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;910:11;:24;;-1:-1:-1;;;;;;944:34:0;924:10;910:24;;-1:-1:-1;;944:34:0;;;;-1:-1:-1;988:187:0;1009:14;:21;1005:1;:25;988:187;;;1051:10;1067:96;;;;;;;;1101:14;1116:1;1101:17;;;;;;;;:::i;:::-;;;;;;;;;;;;1067:96;;1147:1;1067:96;;;;;;1051:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;1032:3;;;;;:::i;:::-;;;;988:187;;;;856:325;64:2019;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;64:2019:0;;;-1:-1:-1;64:2019:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:127:1;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:275;217:2;211:9;282:2;263:13;;-1:-1:-1;;259:27:1;247:40;;-1:-1:-1;;;;;302:34:1;;338:22;;;299:62;296:88;;;364:18;;:::i;:::-;400:2;393:22;146:275;;-1:-1:-1;146:275:1:o;426:1957::-;531:6;562:2;605;593:9;584:7;580:23;576:32;573:52;;;621:1;618;611:12;573:52;648:16;;-1:-1:-1;;;;;713:14:1;;;710:34;;;740:1;737;730:12;710:34;778:6;767:9;763:22;753:32;;804:4;844:7;839:2;835;831:11;827:25;817:53;;866:1;863;856:12;817:53;895:2;889:9;917:2;913;910:10;907:36;;;923:18;;:::i;:::-;969:2;966:1;962:10;992:28;1016:2;1012;1008:11;992:28;:::i;:::-;1054:15;;;1124:11;;;1120:20;;;1085:12;;;;1152:19;;;1149:39;;;1184:1;1181;1174:12;1149:39;1216:2;1212;1208:11;1197:22;;1228:1125;1244:6;1239:3;1236:15;1228:1125;;;1323:3;1317:10;1359:2;1346:11;1343:19;1340:109;;;1403:1;1432:2;1428;1421:14;1340:109;1472:20;;1527:2;1519:11;;1515:25;-1:-1:-1;1505:123:1;;1582:1;1611:2;1607;1600:14;1505:123;1666:2;1662;1658:11;1652:18;1694:2;1689:3;1686:11;1683:37;;;1700:18;;:::i;:::-;1746:52;1770:12;;;-1:-1:-1;;1766:26:1;1762:35;;1746:52;:::i;:::-;1825:3;1818:5;1811:18;1853:2;1898:7;1892:3;1886;1882:2;1878:12;1874:22;1871:35;1868:128;;;1948:1;1978:3;1973;1966:16;1868:128;2018:1;2032:142;2046:3;2043:1;2040:10;2032:142;;;2142:10;;;2138:20;;2132:27;2112:13;;;2108:22;;2101:59;2058:10;;2032:142;;;2196:3;2193:1;2190:10;2187:93;;;2264:1;2259:2;2253:3;2246:5;2242:15;2238:24;2231:35;2187:93;-1:-1:-1;;2293:18:1;;-1:-1:-1;;1261:12:1;;;;2331;;;;1228:1125;;;2372:5;426:1957;-1:-1:-1;;;;;;;;;;426:1957:1:o;2520:127::-;2581:10;2576:3;2572:20;2569:1;2562:31;2612:4;2609:1;2602:15;2636:4;2633:1;2626:15;2652:232;2691:3;-1:-1:-1;;2712:17:1;;2709:140;;;2771:10;2766:3;2762:20;2759:1;2752:31;2806:4;2803:1;2796:15;2834:4;2831:1;2824:15;2709:140;-1:-1:-1;2876:1:1;2865:13;;2652:232::o;2889:380::-;2968:1;2964:12;;;;3011;;;3032:61;;3086:4;3078:6;3074:17;3064:27;;3032:61;3139:2;3131:6;3128:14;3108:18;3105:38;3102:161;;;3185:10;3180:3;3176:20;3173:1;3166:31;3220:4;3217:1;3210:15;3248:4;3245:1;3238:15;3102:161;;2889:380;;;:::o;:::-;64:2019:0;;;;;;", "sourcePath": "contracts/Voting.sol", "type": "contract", "deployment": {"address": "0x9ee695Ac6bbA8f69B743AC95D97E104565F66aE9", "chainid": "42", "blockHeight": 28497672}}